{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/riskManagement/requireSearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class requireSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.OnChnageCity = this.OnChnageCity.bind(this);\n    this.OnChnageMonth = this.OnChnageMonth.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      city: '',\n      month: '',\n      allcity: [],\n      po_place: '',\n      CityCode: '',\n      weatherdata: [],\n      avg1: '',\n      avg2: '',\n      avg3: '',\n      avg4: '',\n      avg5: '',\n      avg6: '',\n      avg7: '',\n      avg8: '',\n      avg9: '',\n      avg10: '',\n      avg11: '',\n      avg12: '',\n      allcityLong: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://agrolly.tech/get_cities.php').then(response => {\n      const getcities = response.data;\n      this.setState({\n        allcity: getcities\n      });\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    });\n    axios.get('http://www.agrolly.tech/po_value.php').then(res => {\n      const po = res.data;\n      this.setState({\n        allcityLong: po\n      }); // this.findcityLong()\n      // this.GetplaceMonth()\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getCityCode() {\n    this.state.allcity.map(currentcity => {\n      if (currentcity.City == this.state.city) {\n        const currentcitypo = currentcity.po_place; // console.log(currentcitypo)\n\n        const CityCode = currentcity.Code;\n\n        if (currentcity.po_place != this.state.po_place) {\n          this.setState({\n            po_place: currentcitypo\n          });\n          this.setState({\n            CityCode: CityCode\n          });\n        }\n      }\n    }); // this.getLong();\n  }\n\n  OnChnageMonth(e) {\n    this.setState({\n      month: e.target.value\n    });\n  }\n\n  OnChnageCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    {\n      this.getCityCode();\n    }\n    {\n      this.countAvarageTemp();\n    }\n  }\n\n  countAvarageTemp() {\n    axios.get('http://agrolly.tech/annualForecast.php?country=Brazil').then(responsedata => {\n      // console.log(responsedata)\n      const weatherdata = responsedata.data;\n      this.setState({\n        weatherdata: weatherdata\n      });\n    });\n    let month1 = 0,\n        count1 = 0,\n        getavg1 = 0;\n    let month2 = 0,\n        count2 = 0,\n        getavg2 = 0;\n    let month3 = 0,\n        count3 = 0,\n        getavg3 = 0;\n    let month4 = 0,\n        count4 = 0,\n        getavg4 = 0;\n    let month5 = 0,\n        count5 = 0,\n        getavg5 = 0;\n    let month6 = 0,\n        count6 = 0,\n        getavg6 = 0;\n    let month7 = 0,\n        count7 = 0,\n        getavg7 = 0;\n    let month8 = 0,\n        count8 = 0,\n        getavg8 = 0;\n    let month9 = 0,\n        count9 = 0,\n        getavg9 = 0;\n    let month10 = 0,\n        count10 = 0,\n        getavg10 = 0;\n    let month11 = 0,\n        count11 = 0,\n        getavg11 = 0;\n    let month12 = 0,\n        count12 = 0,\n        getavg12 = 0;\n    const monthlyava = this.state.weatherdata.map((data, index) => {\n      const date = data[\"Date.fcst\"]; // console.log(date)\n\n      const AVAtemperature = \"TEMPMEDIA_fcast_\" + this.state.CityCode; // console.log(data[AVAtemperature])\n\n      if (date.substring(5, 7).includes(\"01\")) {\n        month1 = data[AVAtemperature] + month1;\n        count1++;\n        getavg1 = month1 / count1;\n      } else if (date.substring(5, 7).includes(\"02\")) {\n        month2 = data[AVAtemperature] + month2;\n        count2++;\n        getavg2 = month2 / count2;\n      } else if (date.substring(5, 7).includes(\"03\")) {\n        month3 = data[AVAtemperature] + month3;\n        count3++;\n        getavg3 = month3 / count3;\n      } else if (date.substring(5, 7).includes(\"04\")) {\n        month4 = data[AVAtemperature] + month4;\n        count4++;\n        getavg4 = month4 / count4;\n      } else if (date.substring(5, 7).includes(\"05\")) {\n        month5 = data[AVAtemperature] + month5;\n        count5++;\n        getavg5 = month5 / count5;\n      } else if (date.substring(5, 7).includes(\"06\")) {\n        month6 = data[AVAtemperature] + month6;\n        count6++;\n        getavg6 = month6 / count6;\n      } else if (date.substring(5, 7).includes(\"07\")) {\n        month7 = data[AVAtemperature] + month7;\n        count7++;\n        getavg7 = month7 / count7;\n      } else if (date.substring(5, 7).includes(\"08\")) {\n        month8 = data[AVAtemperature] + month8;\n        count8++;\n        getavg8 = month8 / count8;\n      } else if (date.substring(5, 7).includes(\"09\")) {\n        month9 = data[AVAtemperature] + month9;\n        count9++;\n        getavg9 = month9 / count9;\n      } else if (date.substring(5, 7).includes(\"10\")) {\n        month10 = data[AVAtemperature] + month10;\n        count10++;\n        getavg10 = month10 / count10;\n      } else if (date.substring(5, 7).includes(\"11\")) {\n        month11 = data[AVAtemperature] + month11;\n        count11++;\n        getavg11 = month11 / count11;\n      } else if (date.substring(5, 7).includes(\"12\")) {\n        month12 = data[AVAtemperature] + month12;\n        count12++;\n        getavg12 = month12 / count12;\n      }\n    });\n\n    if (getavg1 !== this.state.avg1 && getavg1 !== 0) {\n      this.setState({\n        avg1: getavg1\n      });\n    }\n\n    if (getavg2 !== this.state.avg2 && getavg2 !== 0) {\n      this.setState({\n        avg2: getavg2\n      });\n    }\n\n    if (getavg3 !== this.state.avg3 && getavg3 !== 0) {\n      this.setState({\n        avg3: getavg3\n      });\n    }\n\n    if (getavg4 !== this.state.avg4 && getavg4 !== 0) {\n      this.setState({\n        avg4: getavg4\n      });\n    }\n\n    if (getavg5 !== this.state.avg5 && getavg5 !== 0) {\n      this.setState({\n        avg5: getavg5\n      });\n    }\n\n    if (getavg6 !== this.state.avg6 && getavg6 !== 0) {\n      this.setState({\n        avg6: getavg6\n      });\n    }\n\n    if (getavg7 !== this.state.avg7 && getavg7 !== 0) {\n      this.setState({\n        avg7: getavg7\n      });\n    }\n\n    if (getavg8 !== this.state.avg8 && getavg8 !== 0) {\n      this.setState({\n        avg8: getavg8\n      });\n    }\n\n    if (getavg9 !== this.state.avg9 && getavg9 !== 0) {\n      this.setState({\n        avg9: getavg9\n      });\n    }\n\n    if (getavg10 !== this.state.avg10 && getavg10 !== 0) {\n      this.setState({\n        avg10: getavg10\n      });\n    }\n\n    if (getavg11 !== this.state.avg11 && getavg11 !== 0) {\n      this.setState({\n        avg11: getavg11\n      });\n    }\n\n    if (getavg12 !== this.state.avg12 && getavg12 !== 0) {\n      this.setState({\n        avg12: getavg12\n      });\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // this.getCityCode();\n\n    const datainfo = {\n      po_place: this.state.po_place,\n      month: this.state.month,\n      CityCode: this.state.CityCode,\n      avg1: this.state.avg1,\n      avg2: this.state.avg2,\n      avg3: this.state.avg3,\n      avg4: this.state.avg4,\n      avg5: this.state.avg5,\n      avg6: this.state.avg6,\n      avg7: this.state.avg7,\n      avg8: this.state.avg8,\n      avg9: this.state.avg9,\n      avg10: this.state.avg10,\n      avg11: this.state.avg11,\n      avg12: this.state.avg12\n    };\n    this.props.history.push({\n      pathname: '/croprisk/display',\n      state: {\n        detail: datainfo\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"margin\": \"2% 30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 17\n      }\n    }, \"test: \", this.state.avg1), /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 17\n      }\n    }, \"test: \", this.state.avg5), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 29\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputTime\",\n      value: this.state.month,\n      onChange: this.OnChnageMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 29\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 29\n      }\n    }, \"January\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 29\n      }\n    }, \"February\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 29\n      }\n    }, \"March\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 29\n      }\n    }, \"April\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 29\n      }\n    }, \"May\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 29\n      }\n    }, \"June\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, \"July\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 29\n      }\n    }, \"Auguest\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 29\n      }\n    }, \"September\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 29\n      }\n    }, \"October\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 29\n      }\n    }, \"November\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 29\n      }\n    }, \"December\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputCity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }, \"City\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputCity\",\n      value: this.state.city,\n      onChange: this.OnChnageCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, \"Choose...\"), this.state.allcity.map(allcity => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: allcity.City,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 302,\n          columnNumber: 75\n        }\n      }, allcity.City);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"search\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/riskManagement/requireSearch.js"],"names":["React","Component","axios","requireSearch","constructor","props","OnChnageCity","bind","OnChnageMonth","onSubmit","state","city","month","allcity","po_place","CityCode","weatherdata","avg1","avg2","avg3","avg4","avg5","avg6","avg7","avg8","avg9","avg10","avg11","avg12","allcityLong","componentDidMount","get","then","response","getcities","data","setState","catch","error","console","log","res","po","getCityCode","map","currentcity","City","currentcitypo","Code","e","target","value","componentDidUpdate","countAvarageTemp","responsedata","month1","count1","getavg1","month2","count2","getavg2","month3","count3","getavg3","month4","count4","getavg4","month5","count5","getavg5","month6","count6","getavg6","month7","count7","getavg7","month8","count8","getavg8","month9","count9","getavg9","month10","count10","getavg10","month11","count11","getavg11","month12","count12","getavg12","monthlyava","index","date","AVAtemperature","substring","includes","preventDefault","datainfo","history","push","pathname","detail","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nexport default class requireSearch extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.OnChnageCity = this.OnChnageCity.bind(this)\n        this.OnChnageMonth = this.OnChnageMonth.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            city: '',\n            month: '',\n            allcity: [],\n            po_place: '',\n            CityCode: '',\n            weatherdata: [],\n\n            avg1: '',\n            avg2: '',\n            avg3: '',\n            avg4: '',\n            avg5: '',\n            avg6: '',\n            avg7: '',\n            avg8: '',\n            avg9: '',\n            avg10: '',\n            avg11: '',\n            avg12: '',\n\n            allcityLong: [],\n        }\n\n    }\n\n    componentDidMount() {\n        axios.get('http://agrolly.tech/get_cities.php')\n            .then(response => {\n                const getcities = response.data\n                this.setState({ allcity: getcities })\n\n\n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n        axios.get('http://www.agrolly.tech/po_value.php')\n            .then(res => {\n                const po = res.data\n                this.setState({ allcityLong: po })\n                // this.findcityLong()\n                // this.GetplaceMonth()\n            }).catch(error => {\n                console.log(error)\n            })\n\n    }\n\n    getCityCode() {\n        this.state.allcity.map((currentcity) => {\n            if (currentcity.City == this.state.city) {\n                const currentcitypo = currentcity.po_place\n                // console.log(currentcitypo)\n                const CityCode = currentcity.Code\n                if (currentcity.po_place != this.state.po_place) {\n                    this.setState({ po_place: currentcitypo })\n                    this.setState({ CityCode: CityCode })\n                }\n\n            }\n        })\n        // this.getLong();\n    }\n\n    OnChnageMonth(e) {\n        this.setState({\n            month: e.target.value\n        })\n\n    }\n\n    OnChnageCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n\n    }\n\n    componentDidUpdate() {\n        { this.getCityCode() }\n        { this.countAvarageTemp() }\n\n    }\n\n\n    countAvarageTemp() {\n        axios.get('http://agrolly.tech/annualForecast.php?country=Brazil')\n            .then(responsedata => {\n                // console.log(responsedata)\n                const weatherdata = responsedata.data\n                this.setState({ weatherdata: weatherdata })\n            })\n\n        let month1 = 0, count1 = 0, getavg1 = 0\n        let month2 = 0, count2 = 0, getavg2 = 0\n        let month3 = 0, count3 = 0, getavg3 = 0\n        let month4 = 0, count4 = 0, getavg4 = 0\n        let month5 = 0, count5 = 0, getavg5 = 0\n        let month6 = 0, count6 = 0, getavg6 = 0\n        let month7 = 0, count7 = 0, getavg7 = 0\n        let month8 = 0, count8 = 0, getavg8 = 0\n        let month9 = 0, count9 = 0, getavg9 = 0\n        let month10 = 0, count10 = 0, getavg10 = 0\n        let month11 = 0, count11 = 0, getavg11 = 0\n        let month12 = 0, count12 = 0, getavg12 = 0\n\n        const monthlyava = this.state.weatherdata.map((data, index) => {\n\n            const date = data[\"Date.fcst\"]\n            // console.log(date)\n            const AVAtemperature = \"TEMPMEDIA_fcast_\" + this.state.CityCode\n            // console.log(data[AVAtemperature])\n            if (date.substring(5, 7).includes(\"01\")) {\n                month1 = data[AVAtemperature] + month1\n                count1++\n                getavg1 = month1 / count1;\n            } else if (date.substring(5, 7).includes(\"02\")) {\n                month2 = data[AVAtemperature] + month2\n                count2++\n                getavg2 = month2 / count2;\n            } else if (date.substring(5, 7).includes(\"03\")) {\n                month3 = data[AVAtemperature] + month3\n                count3++\n                getavg3 = month3 / count3;\n            } else if (date.substring(5, 7).includes(\"04\")) {\n                month4 = data[AVAtemperature] + month4\n                count4++\n                getavg4 = month4 / count4;\n            } else if (date.substring(5, 7).includes(\"05\")) {\n                month5 = data[AVAtemperature] + month5\n                count5++\n                getavg5 = month5 / count5;\n            } else if (date.substring(5, 7).includes(\"06\")) {\n                month6 = data[AVAtemperature] + month6\n                count6++\n                getavg6 = month6 / count6;\n            } else if (date.substring(5, 7).includes(\"07\")) {\n                month7 = data[AVAtemperature] + month7\n                count7++\n                getavg7 = month7 / count7;\n            } else if (date.substring(5, 7).includes(\"08\")) {\n                month8 = data[AVAtemperature] + month8\n                count8++\n                getavg8 = month8 / count8;\n            } else if (date.substring(5, 7).includes(\"09\")) {\n                month9 = data[AVAtemperature] + month9\n                count9++\n                getavg9 = month9 / count9;\n            } else if (date.substring(5, 7).includes(\"10\")) {\n                month10 = data[AVAtemperature] + month10\n                count10++\n                getavg10 = month10 / count10;\n            } else if (date.substring(5, 7).includes(\"11\")) {\n                month11 = data[AVAtemperature] + month11\n                count11++\n                getavg11 = month11 / count11;\n            } else if (date.substring(5, 7).includes(\"12\")) {\n                month12 = data[AVAtemperature] + month12\n                count12++\n                getavg12 = month12 / count12;\n            }\n        })\n\n        if (getavg1 !== this.state.avg1 && getavg1 !== 0) {\n            this.setState({\n                avg1: getavg1\n            })\n        }\n        if (getavg2 !== this.state.avg2 && getavg2 !== 0) {\n            this.setState({\n                avg2: getavg2\n            })\n        }\n        if (getavg3 !== this.state.avg3 && getavg3 !== 0) {\n            this.setState({\n                avg3: getavg3,\n            })\n        }\n        if (getavg4 !== this.state.avg4 && getavg4 !== 0) {\n            this.setState({\n                avg4: getavg4,\n            })\n        }\n        if (getavg5 !== this.state.avg5 && getavg5 !== 0) {\n            this.setState({ avg5: getavg5 })\n        }\n        if (getavg6 !== this.state.avg6 && getavg6 !== 0) {\n            this.setState({\n                avg6: getavg6\n            })\n        }\n        if (getavg7 !== this.state.avg7 && getavg7 !== 0) {\n            this.setState({\n                avg7: getavg7\n            })\n        }\n        if (getavg8 !== this.state.avg8 && getavg8 !== 0) {\n            this.setState({\n                avg8: getavg8\n            })\n        }\n        if (getavg9 !== this.state.avg9 && getavg9 !== 0) {\n            this.setState({\n                avg9: getavg9\n            })\n        }\n        if (getavg10 !== this.state.avg10 && getavg10 !== 0) {\n            this.setState({\n                avg10: getavg10\n            })\n        }\n        if (getavg11 !== this.state.avg11 && getavg11 !== 0) {\n            this.setState({\n                avg11: getavg11\n            })\n        }\n        if (getavg12 !== this.state.avg12 && getavg12 !== 0) {\n            this.setState({\n                avg12: getavg12,\n            })\n        }\n    }\n\n\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        // this.getCityCode();\n        const datainfo = {\n            po_place: this.state.po_place,\n            month: this.state.month,\n            CityCode: this.state.CityCode,\n            avg1: this.state.avg1,\n            avg2: this.state.avg2,\n            avg3: this.state.avg3,\n            avg4: this.state.avg4,\n            avg5: this.state.avg5,\n            avg6: this.state.avg6,\n            avg7: this.state.avg7,\n            avg8: this.state.avg8,\n            avg9: this.state.avg9,\n            avg10: this.state.avg10,\n            avg11: this.state.avg11,\n            avg12: this.state.avg12,\n        }\n\n\n        this.props.history.push({\n            pathname: '/croprisk/display',\n            state: { detail: datainfo }\n        })\n    }\n\n\n    render() {\n        return (\n            <div style={{ \"margin\": \"2% 30%\" }}>\n                <h1>test: {this.state.avg1}</h1>\n\n                <h1>test: {this.state.avg5}</h1>\n                <form onSubmit={this.onSubmit} >\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputTime\">Month</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputTime\" value={this.state.month} onChange={this.OnChnageMonth}>\n                            <option selected>Choose...</option>\n                            <option value=\"1\">January</option>\n                            <option value=\"2\">February</option>\n                            <option value=\"3\">March</option>\n                            <option value=\"4\">April</option>\n                            <option value=\"5\">May</option>\n                            <option value=\"6\">June</option>\n                            <option value=\"7\">July</option>\n                            <option value=\"8\">Auguest</option>\n                            <option value=\"9\">September</option>\n                            <option value=\"10\">October</option>\n                            <option value=\"11\">November</option>\n                            <option value=\"12\">December</option>\n                        </select>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputCity\">City</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputCity\" value={this.state.city} onChange={this.OnChnageCity}>\n                            <option selected>Choose...</option>\n                            {this.state.allcity.map((allcity) => { return <option value={allcity.City}>{allcity.City}</option> })}\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"search\"\n                            className=\"btn btn-primary\" />\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}