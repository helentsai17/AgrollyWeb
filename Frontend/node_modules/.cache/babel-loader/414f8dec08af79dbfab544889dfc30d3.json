{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/farmer/register.js\";\nimport React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport style from './register.module.css';\nimport backgroundImage from '../../Image/background/register.png';\nimport logo from '../../Image/Agrolly/Agrolly logo.png';\nimport stateData from '../../components/statesData';\nimport MongoliaCityData from '../../components/MongoliaCityData';\nimport Alert from '../layout/alerts';\nexport default class Register extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckboxChange = event => this.setState({\n      checked: event.target.checked\n    });\n\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangeName = this.onChangeName.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n    this.onChangeCountry = this.onChangeCountry.bind(this);\n    this.onChangeState = this.onChangeState.bind(this);\n    this.onchangeCity = this.onchangeCity.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      useremail: \"\",\n      username: \"\",\n      userpassword: \"\",\n      usercountry: \"\",\n      userstate: \"\",\n      usercity: \"\",\n      states: [],\n      stateset: [],\n      cities: [],\n      onetimepassword: \"\",\n      // AllState: [],\n      Brazilcities: [],\n      checked: false,\n      errorMessage: \"\"\n    };\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      useremail: e.target.value\n    });\n  }\n\n  onChangeName(e) {\n    this.setState({\n      username: e.target.value\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      userpassword: e.target.value\n    });\n  }\n\n  onChangeCountry(e) {\n    this.setState({\n      usercountry: e.target.value\n    });\n  }\n\n  onChangeState(e) {\n    this.setState({\n      userstate: e.target.value\n    });\n  }\n\n  onchangeCity(e) {\n    this.setState({\n      usercity: e.target.value\n    });\n  }\n\n  getState() {\n    const StateData = {\n      stateData\n    };\n\n    if (this.state.usercountry === \"brazil\") {\n      axios.get(\"http://agrolly.tech/get_cities.php\").then(response => {\n        // console.log(response.data)\n        const states = response.data;\n        this.setState({\n          states: states\n        });\n      }).catch(error => {\n        console.log(\"error come from resgister: \" + error);\n      });\n      const brazilset = StateData.stateData.Brazil;\n\n      if (this.state.stateset !== brazilset) {\n        this.setState({\n          stateset: brazilset\n        });\n        {\n          this.getBrazilCity();\n        }\n      }\n    } else if (this.state.usercountry === \"mongolia\") {\n      const Mongoliaset = StateData.stateData.Mongolia;\n\n      if (this.state.stateset !== Mongoliaset) {\n        this.setState({\n          stateset: Mongoliaset\n        });\n      }\n    } else if (this.state.usercountry === \"USA\") {\n      const USAset = StateData.stateData.USA;\n\n      if (this.state.stateset !== USAset) {\n        this.setState({\n          stateset: USAset\n        });\n      }\n    } else if (this.state.usercountry === \"taiwan\") {\n      const TaiwanSet = StateData.stateData.Taiwan;\n\n      if (this.state.stateset !== TaiwanSet) {\n        this.setState({\n          stateset: TaiwanSet\n        });\n      }\n    }\n  }\n\n  getBrazilCity() {\n    this.state.states.map(allcity => {\n      if (allcity.State === \"Parana\") {\n        if (!this.state.Brazilcities.includes(allcity.City)) {\n          this.state.Brazilcities.push(allcity.City);\n        }\n      }\n    });\n  }\n\n  getCity() {\n    if (this.state.usercountry === \"brazil\") {\n      if (this.state.userstate == \"Parana\") {\n        {\n          this.getBrazilCity();\n        }\n        const BrazilCity = this.state.Brazilcities; // console.log(BrazilCity);\n\n        if (this.state.cities !== BrazilCity) {\n          this.setState({\n            cities: BrazilCity\n          });\n          console.log(BrazilCity);\n        }\n      }\n    } else if (this.state.usercountry === \"mongolia\") {\n      const MongoliaData = {\n        MongoliaCityData\n      };\n\n      if (this.state.userstate == \"Dornod\") {\n        const DornodSet = MongoliaData.MongoliaCityData.Dornod;\n\n        if (this.state.cities !== DornodSet) {\n          this.setState({\n            cities: DornodSet\n          });\n        }\n      } else if (this.state.userstate == \"Sukhbaatar\") {\n        const SukhbaatarSet = MongoliaData.MongoliaCityData.Sukhbaatar;\n\n        if (this.state.cities !== SukhbaatarSet) {\n          this.setState({\n            cities: SukhbaatarSet\n          });\n        }\n      } else if (this.state.userstate == \"Khentii\") {\n        const KhentiiSet = MongoliaData.MongoliaCityData.Khentii;\n\n        if (this.state.cities !== KhentiiSet) {\n          this.setState({\n            cities: KhentiiSet\n          });\n        }\n      }\n    }\n  }\n\n  componentDidUpdate() {\n    {\n      this.getState();\n    }\n    {\n      this.getCity();\n    }\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n\n    if (this.checked === true) {\n      var val = Math.floor(1000 + Math.random() * 9000);\n      console.log(val);\n      const userRegister = {\n        useremail: this.state.useremail,\n        userpassword: this.state.userpassword,\n        username: this.state.username,\n        usercountry: this.state.usercountry,\n        userstate: this.state.userstate,\n        usercity: this.state.usercity,\n        onetimepassword: val\n      };\n      const mailcheck = {\n        useremail: this.state.useremail,\n        onetimepassword: val\n      };\n      console.log(mailcheck);\n      axios.post('http://agrolly.tech/mail.php', mailcheck, {\n        headers: {\n          'Content-type': 'application/x-www-form-urlencoded'\n        }\n      }).then(response => {\n        console.log(response.data);\n        this.props.history.push({\n          pathname: '/farmer/onetimepassword',\n          state: {\n            detail: userRegister\n          }\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    } else {\n      this.setState({\n        errorMessage: \"place agree with the agreement to move on and register\"\n      });\n      console.log(\"place agree with the agreement to move on and register\");\n    }\n  }\n\n  render() {\n    const message = this.state.errorMessage;\n    const alert = /*#__PURE__*/React.createElement(Alert, {\n      message: message,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 23\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      styles: {\n        backgroundImage: `url(${backgroundImage})`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.backgroundRegister,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.formcontainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        \"width\": \"40%\",\n        \"marginBottom\": \"10px\"\n      },\n      src: logo,\n      alt: \"logo\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"Email\",\n      value: this.state.useremail,\n      onChange: this.onChangeEmail,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 245,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"form-control\",\n      placeholder: \"please enter your full name\",\n      value: this.state.username,\n      onChange: this.onChangeName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"password\",\n      className: \"form-control\",\n      placeholder: \"please set up a password\",\n      value: this.state.userpassword,\n      onChange: this.onChangePassword,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 33\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect02\",\n      value: this.state.usercountry,\n      onChange: this.onChangeCountry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 37\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"brazil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 37\n      }\n    }, \"Brazil\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"mongolia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 37\n      }\n    }, \"Mongolia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"USA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 37\n      }\n    }, \"United State\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"taiwan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 37\n      }\n    }, \"Taiwan\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputGroupSelect02\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 37\n      }\n    }, \"Country\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect03\",\n      value: this.state.userstate,\n      onChange: this.onChangeState,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 37\n      }\n    }, \"Choose...\"), this.state.stateset.map(allstate => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: allstate,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 85\n        }\n      }, allstate);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputGroupSelect03\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 37\n      }\n    }, \"State\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputGroupSelect04\",\n      value: this.state.usercity,\n      onChange: this.onchangeCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 37\n      }\n    }, \"Choose...\"), this.state.cities.map(allcity => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: allcity,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 82\n        }\n      }, allcity);\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-append\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputGroupSelect04\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 293,\n        columnNumber: 37\n      }\n    }, \"City\"))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 29\n      }\n    }, alert), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"display\": \"inline\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"checkbox\",\n      checked: this.state.checked,\n      onChange: this.handleCheckboxChange,\n      name: \"checkbox1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      for: \"checkbox1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 29\n      }\n    }, \"click \", /*#__PURE__*/React.createElement(\"a\", {\n      href: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 58\n      }\n    }, \"here\"), \" to read the agreement\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"register\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 302,\n        columnNumber: 33\n      }\n    }))))));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/farmer/register.js"],"names":["React","Component","useState","axios","style","backgroundImage","logo","stateData","MongoliaCityData","Alert","Register","constructor","props","handleCheckboxChange","event","setState","checked","target","onChangeEmail","bind","onChangeName","onChangePassword","onChangeCountry","onChangeState","onchangeCity","onSubmit","state","useremail","username","userpassword","usercountry","userstate","usercity","states","stateset","cities","onetimepassword","Brazilcities","errorMessage","e","value","getState","StateData","get","then","response","data","catch","error","console","log","brazilset","Brazil","getBrazilCity","Mongoliaset","Mongolia","USAset","USA","TaiwanSet","Taiwan","map","allcity","State","includes","City","push","getCity","BrazilCity","MongoliaData","DornodSet","Dornod","SukhbaatarSet","Sukhbaatar","KhentiiSet","Khentii","componentDidUpdate","preventDefault","val","Math","floor","random","userRegister","mailcheck","post","headers","history","pathname","detail","err","render","message","alert","backgroundRegister","formcontainer","allstate"],"mappings":"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","sourcesContent":["import React, { Component, useState } from 'react';\nimport axios from 'axios';\nimport style from './register.module.css';\nimport backgroundImage from '../../Image/background/register.png'\nimport logo from '../../Image/Agrolly/Agrolly logo.png'\n\nimport stateData from '../../components/statesData'\nimport MongoliaCityData from '../../components/MongoliaCityData'\n\nimport Alert from '../layout/alerts'\n\nexport default class Register extends Component {\n\n\n    constructor(props) {\n        super(props);\n\n        this.onChangeEmail = this.onChangeEmail.bind(this)\n        this.onChangeName = this.onChangeName.bind(this)\n        this.onChangePassword = this.onChangePassword.bind(this)\n        this.onChangeCountry = this.onChangeCountry.bind(this)\n        this.onChangeState = this.onChangeState.bind(this)\n        this.onchangeCity = this.onchangeCity.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            useremail: \"\",\n            username: \"\",\n            userpassword: \"\",\n            usercountry: \"\",\n            userstate: \"\",\n            usercity: \"\",\n            states: [],\n            stateset: [],\n            cities: [],\n            onetimepassword: \"\",\n            // AllState: [],\n            Brazilcities:[],\n            checked: false,\n            errorMessage:\"\"\n        }\n    }\n\n    onChangeEmail(e) {\n        this.setState({\n            useremail: e.target.value\n        });\n    }\n    onChangeName(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    onChangePassword(e) {\n        this.setState({\n            userpassword: e.target.value\n        });\n    }\n\n    onChangeCountry(e) {\n        this.setState({\n            usercountry: e.target.value\n        });\n\n    }\n\n    onChangeState(e) {\n        this.setState({\n            userstate: e.target.value\n        });\n    }\n\n    onchangeCity(e) {\n        this.setState({\n            usercity: e.target.value\n        });\n    }\n\n\n    getState() {\n        const StateData = { stateData }\n        if (this.state.usercountry === \"brazil\") {\n\n            axios.get(\"http://agrolly.tech/get_cities.php\")\n                .then(response => {\n                    // console.log(response.data)\n                    const states = response.data;\n                    this.setState({ states: states });\n                })\n                .catch((error) => {\n                    console.log(\"error come from resgister: \" + error)\n                })\n\n            const brazilset = StateData.stateData.Brazil\n            if (this.state.stateset !== brazilset) {\n                this.setState({ stateset: brazilset })\n                {this.getBrazilCity()}\n            }\n\n\n        } else if (this.state.usercountry === \"mongolia\") {\n\n            const Mongoliaset = StateData.stateData.Mongolia\n            if (this.state.stateset !== Mongoliaset) {\n                this.setState({ stateset: Mongoliaset })\n            }\n\n\n        } else if (this.state.usercountry === \"USA\") {\n            const USAset = StateData.stateData.USA\n            if (this.state.stateset !== USAset) {\n                this.setState({ stateset: USAset })\n            }\n\n        } else if (this.state.usercountry === \"taiwan\") {\n            const TaiwanSet = StateData.stateData.Taiwan\n            if (this.state.stateset !== TaiwanSet) {\n                this.setState({ stateset: TaiwanSet })\n            }\n        }\n\n    }\n\n    getBrazilCity(){\n        this.state.states.map((allcity) => {\n            if (allcity.State === \"Parana\") {\n                if(!this.state.Brazilcities.includes(allcity.City)){\n                this.state.Brazilcities.push(allcity.City)\n            }\n            }\n        })\n    }\n\n    getCity() {\n\n        if (this.state.usercountry === \"brazil\") {\n            if (this.state.userstate == \"Parana\") {\n                {this.getBrazilCity()}\n                const BrazilCity = this.state.Brazilcities\n                // console.log(BrazilCity);\n                if (this.state.cities !== BrazilCity) {\n                    this.setState({ cities: BrazilCity })\n                    console.log(BrazilCity);\n                }\n               \n            }\n\n        } else if (this.state.usercountry === \"mongolia\") {\n            const MongoliaData = { MongoliaCityData }\n            if (this.state.userstate == \"Dornod\") {\n                const DornodSet = MongoliaData.MongoliaCityData.Dornod\n                if (this.state.cities !== DornodSet) {\n                    this.setState({ cities: DornodSet })\n                }\n            } else if (this.state.userstate == \"Sukhbaatar\") {\n                const SukhbaatarSet = MongoliaData.MongoliaCityData.Sukhbaatar\n                if (this.state.cities !== SukhbaatarSet) {\n                    this.setState({ cities: SukhbaatarSet })\n                }\n            } else if (this.state.userstate == \"Khentii\") {\n                const KhentiiSet = MongoliaData.MongoliaCityData.Khentii\n                if (this.state.cities !== KhentiiSet) {\n                    this.setState({ cities: KhentiiSet })\n                }\n            }\n        }\n    }\n\n    componentDidUpdate() {\n        { this.getState() }\n        { this.getCity() }\n\n    }\n\n\n    onSubmit(e) {\n        e.preventDefault();\n\n        if(this.checked === true){\n        var val = Math.floor(1000 + Math.random() * 9000);\n        console.log(val);\n        const userRegister = {\n            useremail: this.state.useremail,\n            userpassword: this.state.userpassword,\n            username: this.state.username,\n            usercountry: this.state.usercountry,\n            userstate: this.state.userstate,\n            usercity: this.state.usercity,\n            onetimepassword: val\n        }\n\n        const mailcheck = {\n            useremail: this.state.useremail,\n            onetimepassword: val\n        }\n        console.log(mailcheck)\n\n\n        axios\n            .post('http://agrolly.tech/mail.php', mailcheck, {\n                headers: {\n                    'Content-type': 'application/x-www-form-urlencoded'\n                }\n            })\n            .then(response => {\n                console.log(response.data)\n                this.props.history.push({\n                    pathname: '/farmer/onetimepassword',\n                    state: { detail: userRegister }\n                })\n            })\n            .catch(err => {\n                console.log(err)\n            })\n\n           \n        }else{\n            this.setState({ errorMessage: \"place agree with the agreement to move on and register\" })\n            console.log(\"place agree with the agreement to move on and register\")\n        }\n    }\n \n\n    handleCheckboxChange = event =>\n    this.setState({ checked: event.target.checked })\n    \n\n    render() {\n        const message = this.state.errorMessage\n        const alert = <Alert message={message} />\n        return (\n\n            <div styles={{ backgroundImage: `url(${backgroundImage})` }} >\n                <div className={style.backgroundRegister}>\n                    <div className={style.formcontainer}>\n                        <img style={{ \"width\": \"40%\", \"marginBottom\": \"10px\" }} src={logo} alt=\"logo\" />\n                        <form onSubmit={this.onSubmit} >\n                            <div className=\"form-group\">\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"Email\"\n                                    value={this.state.useremail}\n                                    onChange={this.onChangeEmail} />\n                            </div>\n                            <div className=\"form-group\">\n\n                                <input type=\"text\" className=\"form-control\"\n                                    placeholder=\"please enter your full name\"\n                                    value={this.state.username}\n                                    onChange={this.onChangeName} />\n                            </div>\n\n                            <div className=\"form-group\">\n                                <input type=\"password\" className=\"form-control\"\n                                    placeholder=\"please set up a password\"\n                                    value={this.state.userpassword}\n                                    onChange={this.onChangePassword} />\n                            </div>\n\n                            <div className=\"input-group mb-3\">\n                                <select className=\"custom-select\" id=\"inputGroupSelect02\" value={this.state.usercountry} onChange={this.onChangeCountry}  >\n                                    <option selected>Choose...</option>\n                                    <option value=\"brazil\">Brazil</option>\n                                    <option value=\"mongolia\">Mongolia</option>\n                                    <option value=\"USA\">United State</option>\n                                    <option value=\"taiwan\">Taiwan</option>\n                                </select>\n                                <div className=\"input-group-append\">\n                                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelect02\">Country</label>\n                                </div>\n                            </div>\n\n                            {/* {this.setState()} */}\n                            {/* {this.getCity} */}\n\n                            <div className=\"input-group mb-3\">\n                                <select className=\"custom-select\" id=\"inputGroupSelect03\" value={this.state.userstate} onChange={this.onChangeState} >\n                                    <option selected>Choose...</option>\n                                    {this.state.stateset.map((allstate) => { return <option value={allstate}>{allstate}</option> })}\n                                </select>\n                                <div className=\"input-group-append\">\n                                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelect03\">State</label>\n                                </div>\n                            </div>\n\n\n                            <div className=\"input-group mb-3\">\n                                <select className=\"custom-select\" id=\"inputGroupSelect04\" value={this.state.usercity} onChange={this.onchangeCity}>\n                                    <option selected>Choose...</option>\n                                    {this.state.cities.map((allcity) => { return <option value={allcity}>{allcity}</option> })}\n                                </select>\n                                <div className=\"input-group-append\">\n                                    <label className=\"input-group-text\" htmlFor=\"inputGroupSelect04\">City</label>\n                                </div>\n                            </div>\n                            <div>{alert}</div>\n                            <div style= {{\"display\":\"inline\"}}>\n                            <input type=\"checkbox\" checked={this.state.checked} onChange={this.handleCheckboxChange} name=\"checkbox1\"/> \n                            <label for=\"checkbox1\">click <a href=\"\">here</a> to read the agreement</label>\n                            </div>\n                            <div className=\"form-group\">\n                                <input type=\"submit\" value=\"register\"\n                                    className=\"btn btn-primary\" />\n                            </div>\n                            \n                        </form>\n\n\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}