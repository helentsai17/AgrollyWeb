{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/weatherPage/weeklyweather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class weeklyweather extends Component {\n  constructor(props) {\n    super(props); // App State\n\n    this.state = {\n      lat: 0,\n      lng: 0,\n      IBMdata: []\n    };\n  }\n\n  componentDidMount() {\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      this.setState({\n        lat: latitude.toFixed(4),\n        lng: longitude.toFixed(4)\n      });\n    };\n\n    const error = () => {\n      console.log(\"Unable to retrieve your location\");\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n    const languageList = \"en-US\";\n    const APIkey = \"da328055e2e940d8b28055e2e9e0d851\";\n    axios.get('https://api.weather.com/v3/wx/forecast/daily/5day?geocode=' + this.state.lat + ',' + this.state.lng + '&format=json&units=m&language=' + languageList + '&apiKey=' + APIkey).then(response => {\n      console.log(response.data);\n      this.setState({\n        IBMdata: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, \"this page are for weekly weather\", /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, this.state.lng), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, this.state.lat));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/weatherPage/weeklyweather.js"],"names":["React","Component","axios","weeklyweather","constructor","props","state","lat","lng","IBMdata","componentDidMount","success","position","latitude","coords","longitude","setState","toFixed","error","console","log","navigator","geolocation","getCurrentPosition","languageList","APIkey","get","then","response","data","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAGA,eAAe,MAAMC,aAAN,SAA4BF,SAA5B,CAAsC;AAEjDG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,OAAO,EAAC;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAElB,UAAMC,OAAO,GAAGC,QAAQ,IAAI;AAC1B,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AAEA,WAAKC,QAAL,CAAc;AACZT,QAAAA,GAAG,EAAEM,QAAQ,CAACI,OAAT,CAAiB,CAAjB,CADO;AAEZT,QAAAA,GAAG,EAAEO,SAAS,CAACE,OAAV,CAAkB,CAAlB;AAFO,OAAd;AAID,KARD;;AASA,UAAMC,KAAK,GAAG,MAAM;AAClBC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,KAFD;;AAGAC,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCZ,OAAzC,EAAkDO,KAAlD;AAGA,UAAMM,YAAY,GAAG,OAArB;AACI,UAAMC,MAAM,GAAG,kCAAf;AACAvB,IAAAA,KAAK,CAACwB,GAAN,CAAU,+DAA8D,KAAKpB,KAAL,CAAWC,GAAzE,GAA+E,GAA/E,GAAqF,KAAKD,KAAL,CAAWE,GAAhG,GAAsG,gCAAtG,GAAyIgB,YAAzI,GAAwJ,UAAxJ,GAAmKC,MAA7K,EACKE,IADL,CACUC,QAAQ,IAAI;AACdT,MAAAA,OAAO,CAACC,GAAR,CAAYQ,QAAQ,CAACC,IAArB;AACA,WAAKb,QAAL,CAAc;AAACP,QAAAA,OAAO,EAACmB,QAAQ,CAACC;AAAlB,OAAd;AACH,KAJL;AAKL;;AAIHC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wDAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKxB,KAAL,CAAWE,GAAjB,CAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAM,KAAKF,KAAL,CAAWC,GAAjB,CAHJ,CADJ;AAOH;;AAjDgD","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\n\n\nexport default class weeklyweather extends Component {\n\n    constructor(props) {\n        super(props);\n      \n        // App State\n        this.state = {\n          lat: 0,\n          lng: 0,\n          IBMdata:[]\n        }\n      };\n      \n      componentDidMount() {\n        \n        const success = position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n      \n          this.setState({\n            lat: latitude.toFixed(4),\n            lng: longitude.toFixed(4)\n          });\n        };\n        const error = () => {\n          console.log(\"Unable to retrieve your location\");\n        };\n        navigator.geolocation.getCurrentPosition(success, error);\n        \n\n        const languageList = \"en-US\"\n            const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n            axios.get('https://api.weather.com/v3/wx/forecast/daily/5day?geocode='+ this.state.lat + ',' + this.state.lng + '&format=json&units=m&language=' + languageList + '&apiKey='+APIkey)\n                .then(response => {\n                    console.log(response.data)\n                    this.setState({IBMdata:response.data})\n                })\n      }\n\n\n    \n    render() {\n        return (\n            <div>\n                this page are for weekly weather\n                <div>{this.state.lng}</div>\n                <div>{this.state.lat}</div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}