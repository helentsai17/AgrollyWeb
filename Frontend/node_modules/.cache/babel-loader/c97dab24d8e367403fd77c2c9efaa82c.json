{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/riskManagement/requireSearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class requireSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.OnChnageCity = this.OnChnageCity.bind(this);\n    this.OnChnageMonth = this.OnChnageMonth.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      city: '',\n      month: '',\n      allcity: [],\n      po_place: '',\n      CityCode: '',\n      weatherdata: [],\n      rainfall1: '',\n      rainfall2: '',\n      rainfall3: '',\n      rainfall4: '',\n      avg1: '',\n      avg2: '',\n      avg3: '',\n      avg4: '',\n      avg5: '',\n      avg6: '',\n      avg7: '',\n      avg8: '',\n      avg9: '',\n      avg10: '',\n      avg11: '',\n      avg12: '',\n      allcityLong: []\n    };\n  }\n\n  componentDidMount() {\n    //get all the city\n    axios.get('http://agrolly.tech/get_cities.php').then(response => {\n      const getcities = response.data;\n      this.setState({\n        allcity: getcities\n      });\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    }); //get po\n\n    axios.get('http://www.agrolly.tech/po_value.php').then(res => {\n      const po = res.data;\n      this.setState({\n        allcityLong: po\n      });\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  getCityCode() {\n    this.state.allcity.map(currentcity => {\n      if (currentcity.City == this.state.city) {\n        const currentcitypo = currentcity.po_place; // console.log(currentcitypo)\n\n        const CityCode = currentcity.Code;\n\n        if (currentcity.po_place != this.state.po_place) {\n          this.setState({\n            po_place: currentcitypo\n          });\n          this.setState({\n            CityCode: CityCode\n          });\n        }\n      }\n    }); // this.getLong();\n  }\n\n  OnChnageMonth(e) {\n    this.setState({\n      month: e.target.value\n    });\n  }\n\n  OnChnageCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    {\n      this.getCityCode();\n    }\n    {\n      this.countAvarageTemp();\n    }\n  }\n\n  countAvarageTemp() {\n    axios.get('http://agrolly.tech/annualForecast.php?country=Brazil').then(responsedata => {\n      // console.log(responsedata)\n      const weatherdata = responsedata.data;\n      this.setState({\n        weatherdata: weatherdata\n      });\n    });\n    let month1 = 0,\n        count1 = 0,\n        getavg1 = 0,\n        rainfall1 = 0;\n    let month2 = 0,\n        count2 = 0,\n        getavg2 = 0,\n        rainfall2 = 0;\n    let month3 = 0,\n        count3 = 0,\n        getavg3 = 0,\n        rainfall3 = 0;\n    let month4 = 0,\n        count4 = 0,\n        getavg4 = 0,\n        rainfall4 = 0;\n    let month5 = 0,\n        count5 = 0,\n        getavg5 = 0,\n        rainfall5 = 0;\n    let month6 = 0,\n        count6 = 0,\n        getavg6 = 0,\n        rainfall6 = 0;\n    let month7 = 0,\n        count7 = 0,\n        getavg7 = 0,\n        rainfall7 = 0;\n    let month8 = 0,\n        count8 = 0,\n        getavg8 = 0,\n        rainfall8 = 0;\n    let month9 = 0,\n        count9 = 0,\n        getavg9 = 0,\n        rainfall9 = 0;\n    let month10 = 0,\n        count10 = 0,\n        getavg10 = 0,\n        rainfall10 = 0;\n    let month11 = 0,\n        count11 = 0,\n        getavg11 = 0,\n        rainfall11 = 0;\n    let month12 = 0,\n        count12 = 0,\n        getavg12 = 0,\n        rainfall12 = 0;\n    const monthlyava = this.state.weatherdata.map((data, index) => {\n      const date = data[\"Date.fcst\"]; // console.log(date)\n\n      const AVAtemperature = \"TEMPMEDIA_fcast_\" + this.state.CityCode;\n      const rainfall = \"SNfcast_\" + this.state.CityCode + \".mean\"; // console.log(data[AVAtemperature])\n\n      if (date.substring(5, 7).includes(\"01\")) {\n        month1 = data[AVAtemperature] + month1;\n        rainfall1 = data[rainfall] + rainfall1;\n        count1++;\n        getavg1 = month1 / count1;\n      } else if (date.substring(5, 7).includes(\"02\")) {\n        month2 = data[AVAtemperature] + month2;\n        rainfall2 = data[rainfall] + rainfall2;\n        count2++;\n        getavg2 = month2 / count2;\n      } else if (date.substring(5, 7).includes(\"03\")) {\n        month3 = data[AVAtemperature] + month3;\n        rainfall3 = data[rainfall] + rainfall3;\n        count3++;\n        getavg3 = month3 / count3;\n      } else if (date.substring(5, 7).includes(\"04\")) {\n        month4 = data[AVAtemperature] + month4;\n        rainfall4 = data[rainfall] + rainfall4;\n        count4++;\n        getavg4 = month4 / count4;\n      } else if (date.substring(5, 7).includes(\"05\")) {\n        month5 = data[AVAtemperature] + month5;\n        rainfall5 = data[rainfall] + rainfall5;\n        count5++;\n        getavg5 = month5 / count5;\n      } else if (date.substring(5, 7).includes(\"06\")) {\n        month6 = data[AVAtemperature] + month6;\n        rainfall6 = data[rainfall] + rainfall6;\n        count6++;\n        getavg6 = month6 / count6;\n      } else if (date.substring(5, 7).includes(\"07\")) {\n        month7 = data[AVAtemperature] + month7;\n        rainfall7 = data[rainfall] + rainfall7;\n        count7++;\n        getavg7 = month7 / count7;\n      } else if (date.substring(5, 7).includes(\"08\")) {\n        month8 = data[AVAtemperature] + month8;\n        rainfall8 = data[rainfall] + rainfall8;\n        count8++;\n        getavg8 = month8 / count8;\n      } else if (date.substring(5, 7).includes(\"09\")) {\n        month9 = data[AVAtemperature] + month9;\n        rainfall9 = data[rainfall] + rainfall9;\n        count9++;\n        getavg9 = month9 / count9;\n      } else if (date.substring(5, 7).includes(\"10\")) {\n        month10 = data[AVAtemperature] + month10;\n        rainfall10 = data[rainfall] + rainfall10;\n        count10++;\n        getavg10 = month10 / count10;\n      } else if (date.substring(5, 7).includes(\"11\")) {\n        month11 = data[AVAtemperature] + month11;\n        rainfall11 = data[rainfall] + rainfall11;\n        count11++;\n        getavg11 = month11 / count11;\n      } else if (date.substring(5, 7).includes(\"12\")) {\n        month12 = data[AVAtemperature] + month12;\n        rainfall12 = data[rainfall] + rainfall12;\n        count12++;\n        getavg12 = month12 / count12;\n      }\n    });\n    new Promise(resolve => {\n      setTimeout(() => {\n        resolve();\n\n        if (Math.floor(getavg1) !== Math.floor(this.state.avg1) && getavg1 !== 0) {\n          this.setState({\n            avg1: getavg1,\n            rainfall1: Math.floor(rainfall1)\n          });\n        }\n\n        if (Math.floor(getavg2) !== Math.floor(this.state.avg2) && getavg2 !== 0) {\n          this.setState({\n            avg2: getavg2,\n            rainfall2: Math.floor(rainfall2)\n          });\n        }\n\n        if (Math.floor(getavg3) !== Math.floor(this.state.avg3) && getavg3 !== 0) {\n          this.setState({\n            avg3: getavg3\n          });\n        }\n\n        if (Math.floor(getavg4) !== Math.floor(this.state.avg4) && getavg4 !== 0) {\n          this.setState({\n            avg4: getavg4\n          });\n        }\n\n        if (Math.floor(getavg5) !== Math.floor(this.state.avg5) && getavg5 !== 0) {\n          this.setState({\n            avg5: getavg5\n          });\n        }\n\n        if (Math.floor(getavg6) !== Math.floor(this.state.avg6) && getavg6 !== 0) {\n          this.setState({\n            avg6: getavg6\n          });\n        }\n\n        if (Math.floor(getavg7) !== Math.floor(this.state.avg7) && getavg7 !== 0) {\n          this.setState({\n            avg7: getavg7\n          });\n        }\n\n        if (Math.floor(getavg8) !== Math.floor(this.state.avg8) && getavg8 !== 0) {\n          this.setState({\n            avg8: getavg8\n          });\n        }\n\n        if (Math.floor(getavg9) !== Math.floor(this.state.avg9) && getavg9 !== 0) {\n          this.setState({\n            avg9: getavg9\n          });\n        }\n\n        if (Math.floor(getavg10) !== Math.floor(this.state.avg10) && getavg10 !== 0) {\n          this.setState({\n            avg10: getavg10\n          });\n        }\n\n        if (Math.floor(getavg11) !== Math.floor(this.state.avg11) && getavg11 !== 0) {\n          this.setState({\n            avg11: getavg11\n          });\n        }\n\n        if (Math.floor(getavg12) !== Math.floor(this.state.avg12) && getavg12 !== 0) {\n          this.setState({\n            avg12: getavg12\n          });\n        }\n      }, 5 * 1000);\n    }); // if (getavg1 !== this.state.avg1 && getavg1 !== 0) {\n    //     this.setState({\n    //         avg1: getavg1\n    //     })\n    // }\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // this.getCityCode();\n\n    const datainfo = {\n      po_place: this.state.po_place,\n      month: this.state.month,\n      CityCode: this.state.CityCode,\n      avg1: this.state.avg1,\n      avg2: this.state.avg2,\n      avg3: this.state.avg3,\n      avg4: this.state.avg4,\n      avg5: this.state.avg5,\n      avg6: this.state.avg6,\n      avg7: this.state.avg7,\n      avg8: this.state.avg8,\n      avg9: this.state.avg9,\n      avg10: this.state.avg10,\n      avg11: this.state.avg11,\n      avg12: this.state.avg12\n    };\n    this.props.history.push({\n      pathname: '/croprisk/display',\n      state: {\n        detail: datainfo\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"margin\": \"2% 30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 306,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 17\n      }\n    }, \"test: \", this.state.rainfall1), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 29\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputTime\",\n      value: this.state.month,\n      onChange: this.OnChnageMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 29\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 29\n      }\n    }, \"January\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 29\n      }\n    }, \"February\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 29\n      }\n    }, \"March\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 29\n      }\n    }, \"April\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 29\n      }\n    }, \"May\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 29\n      }\n    }, \"June\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 29\n      }\n    }, \"July\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 29\n      }\n    }, \"Auguest\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 29\n      }\n    }, \"September\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 324,\n        columnNumber: 29\n      }\n    }, \"October\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 29\n      }\n    }, \"November\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 29\n      }\n    }, \"December\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputCity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 29\n      }\n    }, \"City\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputCity\",\n      value: this.state.city,\n      onChange: this.OnChnageCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 29\n      }\n    }, \"Choose...\"), this.state.allcity.map(allcity => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: allcity.City,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 75\n        }\n      }, allcity.City);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"search\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/riskManagement/requireSearch.js"],"names":["React","Component","axios","requireSearch","constructor","props","OnChnageCity","bind","OnChnageMonth","onSubmit","state","city","month","allcity","po_place","CityCode","weatherdata","rainfall1","rainfall2","rainfall3","rainfall4","avg1","avg2","avg3","avg4","avg5","avg6","avg7","avg8","avg9","avg10","avg11","avg12","allcityLong","componentDidMount","get","then","response","getcities","data","setState","catch","error","console","log","res","po","getCityCode","map","currentcity","City","currentcitypo","Code","e","target","value","componentDidUpdate","countAvarageTemp","responsedata","month1","count1","getavg1","month2","count2","getavg2","month3","count3","getavg3","month4","count4","getavg4","month5","count5","getavg5","rainfall5","month6","count6","getavg6","rainfall6","month7","count7","getavg7","rainfall7","month8","count8","getavg8","rainfall8","month9","count9","getavg9","rainfall9","month10","count10","getavg10","rainfall10","month11","count11","getavg11","rainfall11","month12","count12","getavg12","rainfall12","monthlyava","index","date","AVAtemperature","rainfall","substring","includes","Promise","resolve","setTimeout","Math","floor","preventDefault","datainfo","history","push","pathname","detail","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nexport default class requireSearch extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.OnChnageCity = this.OnChnageCity.bind(this)\n        this.OnChnageMonth = this.OnChnageMonth.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            city: '',\n            month: '',\n            allcity: [],\n            po_place: '',\n            CityCode: '',\n            weatherdata: [],\n            \n            rainfall1:'',\n            rainfall2:'',\n            rainfall3:'',\n            rainfall4:'',\n\n            avg1: '',\n            avg2: '',\n            avg3: '',\n            avg4: '',\n            avg5: '',\n            avg6: '',\n            avg7: '',\n            avg8: '',\n            avg9: '',\n            avg10: '',\n            avg11: '',\n            avg12: '',\n\n            allcityLong: [],\n        }\n\n    }\n\n    componentDidMount() {\n        //get all the city\n        axios.get('http://agrolly.tech/get_cities.php')\n            .then(response => {\n                const getcities = response.data\n                this.setState({ allcity: getcities })\n\n\n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n\n        //get po\n        axios.get('http://www.agrolly.tech/po_value.php')\n            .then(res => {\n                const po = res.data\n                this.setState({ allcityLong: po })\n            }).catch(error => {\n                console.log(error)\n            })\n\n    }\n\n    getCityCode() {\n        this.state.allcity.map((currentcity) => {\n            if (currentcity.City == this.state.city) {\n                const currentcitypo = currentcity.po_place\n                // console.log(currentcitypo)\n                const CityCode = currentcity.Code\n                if (currentcity.po_place != this.state.po_place) {\n                    this.setState({ po_place: currentcitypo })\n                    this.setState({ CityCode: CityCode })\n                }\n            }\n        })\n        // this.getLong();\n    }\n\n    OnChnageMonth(e) {\n        this.setState({\n            month: e.target.value\n        })\n\n    }\n\n    OnChnageCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n\n    }\n\n    componentDidUpdate() {\n        { this.getCityCode() }\n        { this.countAvarageTemp() }\n    }\n\n\n    countAvarageTemp() {\n        axios.get('http://agrolly.tech/annualForecast.php?country=Brazil')\n            .then(responsedata => {\n                // console.log(responsedata)\n                const weatherdata = responsedata.data\n                this.setState({ weatherdata: weatherdata })\n            })\n\n        let month1 = 0, count1 = 0, getavg1 = 0, rainfall1 = 0\n        let month2 = 0, count2 = 0, getavg2 = 0, rainfall2 = 0\n        let month3 = 0, count3 = 0, getavg3 = 0, rainfall3 = 0\n        let month4 = 0, count4 = 0, getavg4 = 0, rainfall4 = 0\n        let month5 = 0, count5 = 0, getavg5 = 0, rainfall5 = 0\n        let month6 = 0, count6 = 0, getavg6 = 0, rainfall6 = 0\n        let month7 = 0, count7 = 0, getavg7 = 0, rainfall7 = 0\n        let month8 = 0, count8 = 0, getavg8 = 0, rainfall8 = 0\n        let month9 = 0, count9 = 0, getavg9 = 0, rainfall9 = 0\n        let month10 = 0, count10 = 0, getavg10 = 0, rainfall10 = 0\n        let month11 = 0, count11 = 0, getavg11 = 0, rainfall11 = 0\n        let month12 = 0, count12 = 0, getavg12 = 0, rainfall12 = 0\n\n        \n        const monthlyava = this.state.weatherdata.map((data, index) => {\n\n            const date = data[\"Date.fcst\"]\n            // console.log(date)\n            const AVAtemperature = \"TEMPMEDIA_fcast_\" + this.state.CityCode\n            const rainfall = \"SNfcast_\"+this.state.CityCode+\".mean\"\n            // console.log(data[AVAtemperature])\n            if (date.substring(5, 7).includes(\"01\")) {\n                month1 = data[AVAtemperature] + month1\n                rainfall1 = data[rainfall]+rainfall1\n                count1++\n                getavg1 = month1 / count1;\n            } else if (date.substring(5, 7).includes(\"02\")) {\n                month2 = data[AVAtemperature] + month2\n                rainfall2 = data[rainfall]+rainfall2\n                count2++\n                getavg2 = month2 / count2;\n            } else if (date.substring(5, 7).includes(\"03\")) {\n                month3 = data[AVAtemperature] + month3\n                rainfall3 = data[rainfall]+rainfall3\n                count3++\n                getavg3 = month3 / count3;\n            } else if (date.substring(5, 7).includes(\"04\")) {\n                month4 = data[AVAtemperature] + month4\n                rainfall4 = data[rainfall]+rainfall4\n                count4++\n                getavg4 = month4 / count4;\n            } else if (date.substring(5, 7).includes(\"05\")) {\n                month5 = data[AVAtemperature] + month5\n                rainfall5 = data[rainfall]+rainfall5\n                count5++\n                getavg5 = month5 / count5;\n            } else if (date.substring(5, 7).includes(\"06\")) {\n                month6 = data[AVAtemperature] + month6\n                rainfall6 = data[rainfall]+rainfall6\n                count6++\n                getavg6 = month6 / count6;\n            } else if (date.substring(5, 7).includes(\"07\")) {\n                month7 = data[AVAtemperature] + month7\n                rainfall7 = data[rainfall]+rainfall7\n                count7++\n                getavg7 = month7 / count7;\n            } else if (date.substring(5, 7).includes(\"08\")) {\n                month8 = data[AVAtemperature] + month8\n                rainfall8 = data[rainfall]+rainfall8\n                count8++\n                getavg8 = month8 / count8;\n            } else if (date.substring(5, 7).includes(\"09\")) {\n                month9 = data[AVAtemperature] + month9\n                rainfall9 = data[rainfall]+rainfall9\n                count9++\n                getavg9 = month9 / count9;\n            } else if (date.substring(5, 7).includes(\"10\")) {\n                month10 = data[AVAtemperature] + month10\n                rainfall10 = data[rainfall]+rainfall10\n                count10++\n                getavg10 = month10 / count10;\n            } else if (date.substring(5, 7).includes(\"11\")) {\n                month11 = data[AVAtemperature] + month11\n                rainfall11 = data[rainfall]+rainfall11\n                count11++\n                getavg11 = month11 / count11;\n            } else if (date.substring(5, 7).includes(\"12\")) {\n                month12 = data[AVAtemperature] + month12\n                rainfall12 = data[rainfall]+rainfall12\n                count12++\n                getavg12 = month12 / count12;\n            }\n        })\n    \n        new Promise(resolve => {\n            setTimeout(() => {\n                resolve()\n                if (Math.floor(getavg1) !== Math.floor(this.state.avg1) && getavg1 !== 0) {\n                    this.setState({\n                        avg1: getavg1,\n                        rainfall1 : Math.floor(rainfall1)\n                    })\n                }\n                if (Math.floor(getavg2) !== Math.floor(this.state.avg2) && getavg2 !== 0) {\n                    this.setState({\n                        avg2: getavg2,\n                        rainfall2 : Math.floor(rainfall2)\n                    })\n                }\n                if (Math.floor(getavg3) !== Math.floor(this.state.avg3) && getavg3 !== 0) {\n                    this.setState({\n                        avg3: getavg3,\n                    })\n                }\n                if (Math.floor(getavg4) !== Math.floor(this.state.avg4) && getavg4 !== 0) {\n                    this.setState({\n                        avg4: getavg4,\n                    })\n                }\n                if (Math.floor(getavg5) !== Math.floor(this.state.avg5) && getavg5 !== 0) {\n                    this.setState({ avg5: getavg5 })\n                }\n                if (Math.floor(getavg6) !== Math.floor(this.state.avg6) && getavg6 !== 0) {\n                    this.setState({\n                        avg6: getavg6\n                    })\n                }\n                if (Math.floor(getavg7) !== Math.floor(this.state.avg7) && getavg7 !== 0) {\n                    this.setState({\n                        avg7: getavg7\n                    })\n                }\n                if (Math.floor(getavg8) !== Math.floor(this.state.avg8) && getavg8 !== 0) {\n                    this.setState({\n                        avg8: getavg8\n                    })\n                }\n                if (Math.floor(getavg9) !== Math.floor(this.state.avg9) && getavg9 !== 0) {\n                    this.setState({\n                        avg9: getavg9\n                    })\n                }\n                if (Math.floor(getavg10) !== Math.floor(this.state.avg10) && getavg10 !== 0) {\n                    this.setState({\n                        avg10: getavg10\n                    })\n                }\n                if (Math.floor(getavg11) !== Math.floor(this.state.avg11) && getavg11 !== 0) {\n                    this.setState({\n                        avg11: getavg11\n                    })\n                }\n                if (Math.floor(getavg12) !== Math.floor(this.state.avg12) && getavg12 !== 0) {\n                    this.setState({\n                        avg12: getavg12,\n                    })\n                }\n                \n            }, 5 * 1000)\n        })\n\n            // if (getavg1 !== this.state.avg1 && getavg1 !== 0) {\n            //     this.setState({\n            //         avg1: getavg1\n            //     })\n            // }\n            \n            \n\n        \n    }\n\n\n\n\n    onSubmit(e) {\n        e.preventDefault();\n        // this.getCityCode();\n        const datainfo = {\n            po_place: this.state.po_place,\n            month: this.state.month,\n            CityCode: this.state.CityCode,\n            avg1: this.state.avg1,\n            avg2: this.state.avg2,\n            avg3: this.state.avg3,\n            avg4: this.state.avg4,\n            avg5: this.state.avg5,\n            avg6: this.state.avg6,\n            avg7: this.state.avg7,\n            avg8: this.state.avg8,\n            avg9: this.state.avg9,\n            avg10: this.state.avg10,\n            avg11: this.state.avg11,\n            avg12: this.state.avg12,\n        }\n\n\n        this.props.history.push({\n            pathname: '/croprisk/display',\n            state: { detail: datainfo }\n        })\n    }\n\n\n    render() {\n        return (\n            <div style={{ \"margin\": \"2% 30%\" }}>\n                <h1>test: {this.state.rainfall1}</h1>\n                <form onSubmit={this.onSubmit} >\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputTime\">Month</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputTime\" value={this.state.month} onChange={this.OnChnageMonth}>\n                            <option selected>Choose...</option>\n                            <option value=\"1\">January</option>\n                            <option value=\"2\">February</option>\n                            <option value=\"3\">March</option>\n                            <option value=\"4\">April</option>\n                            <option value=\"5\">May</option>\n                            <option value=\"6\">June</option>\n                            <option value=\"7\">July</option>\n                            <option value=\"8\">Auguest</option>\n                            <option value=\"9\">September</option>\n                            <option value=\"10\">October</option>\n                            <option value=\"11\">November</option>\n                            <option value=\"12\">December</option>\n                        </select>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputCity\">City</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputCity\" value={this.state.city} onChange={this.OnChnageCity}>\n                            <option selected>Choose...</option>\n                            {this.state.allcity.map((allcity) => { return <option value={allcity.City}>{allcity.City}</option> })}\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"search\"\n                            className=\"btn btn-primary\" />\n                    </div>\n                </form>\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}