{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/weatherPage/hourlyweather.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nexport default class hourlyweather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lat: \"\",\n      lng: \"\",\n      IBMweatherdata: []\n    };\n  }\n\n  componentDidMount() {\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      console.log(latitude, longitude);\n      this.setState({\n        lat: latitude,\n        lng: longitude\n      });\n    };\n\n    const error = () => {\n      console.log(\"Unable to retrieve your location\");\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n    const languageList = \"en-US\";\n    const APIkey = \"da328055e2e940d8b28055e2e9e0d851\";\n    axios.get('https://api.weather.com/v1/geocode/' + this.state.lat + '/' + this.state.lng + '/forecast/intraday/3day.json?units=m&language=' + languageList + '&apiKey=' + APIkey).then(response => {\n      console.log(response.data.forecasts);\n      this.setState({\n        IBMweatherdata: response\n      });\n    }); // navigator.geolocation.getCurrentPosition(function (position) {\n    //     //   console.log(\"Latitude is :\", position.coords.latitude);\n    //     //   console.log(\"Longitude is :\", position.coords.longitude);\n    //     const languageList = \"en-US\"\n    //     const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n    //     axios.get('https://api.weather.com/v1/geocode/' + position.coords.latitude + '/' + position.coords.longitude + '/forecast/intraday/3day.json?units=m&language=' + languageList + '&apiKey=' + APIkey)\n    //         .then(response => {\n    //             console.log(response.data.forecasts)\n    //             this.setState({ IBMweatherdata: response })\n    //         })\n    // });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"this page are for hourly weather\");\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/weatherPage/hourlyweather.js"],"names":["axios","React","Component","hourlyweather","constructor","props","state","lat","lng","IBMweatherdata","componentDidMount","success","position","latitude","coords","longitude","console","log","setState","error","navigator","geolocation","getCurrentPosition","languageList","APIkey","get","then","response","data","forecasts","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,eAAe,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAEjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,GAAG,EAAE,EADI;AAETC,MAAAA,GAAG,EAAE,EAFI;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,UAAMC,OAAO,GAAGC,QAAQ,IAAI;AACxB,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBE,SAAtB;AACA,WAAKG,QAAL,CAAc;AACVX,QAAAA,GAAG,EAAEM,QADK;AAEVL,QAAAA,GAAG,EAAEO;AAFK,OAAd;AAIH,KARD;;AAUA,UAAMI,KAAK,GAAG,MAAM;AAChBH,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACH,KAFD;;AAIAG,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCX,OAAzC,EAAkDQ,KAAlD;AAEA,UAAMI,YAAY,GAAG,OAArB;AACA,UAAMC,MAAM,GAAG,kCAAf;AACAxB,IAAAA,KAAK,CAACyB,GAAN,CAAU,wCAAwC,KAAKnB,KAAL,CAAWC,GAAnD,GAAyD,GAAzD,GAA+D,KAAKD,KAAL,CAAWE,GAA1E,GAAgF,gDAAhF,GAAmIe,YAAnI,GAAkJ,UAAlJ,GAA+JC,MAAzK,EACKE,IADL,CACUC,QAAQ,IAAI;AACdX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAQ,CAACC,IAAT,CAAcC,SAA1B;AACA,WAAKX,QAAL,CAAc;AAAET,QAAAA,cAAc,EAAEkB;AAAlB,OAAd;AACH,KAJL,EApBgB,CA0BhB;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAGH;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ;AAKH;;AA7DgD","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\n\n\n\nexport default class hourlyweather extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            lat: \"\",\n            lng: \"\",\n            IBMweatherdata: []\n        };\n    }\n\n    componentDidMount() {\n\n        const success = position => {\n            const latitude = position.coords.latitude;\n            const longitude = position.coords.longitude;\n            console.log(latitude, longitude);\n            this.setState({\n                lat: latitude,\n                lng: longitude\n            });\n        };\n\n        const error = () => {\n            console.log(\"Unable to retrieve your location\");\n        };\n\n        navigator.geolocation.getCurrentPosition(success, error);\n\n        const languageList = \"en-US\"\n        const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n        axios.get('https://api.weather.com/v1/geocode/' + this.state.lat + '/' + this.state.lng + '/forecast/intraday/3day.json?units=m&language=' + languageList + '&apiKey=' + APIkey)\n            .then(response => {\n                console.log(response.data.forecasts)\n                this.setState({ IBMweatherdata: response })\n            })\n\n        // navigator.geolocation.getCurrentPosition(function (position) {\n        //     //   console.log(\"Latitude is :\", position.coords.latitude);\n        //     //   console.log(\"Longitude is :\", position.coords.longitude);\n\n        //     const languageList = \"en-US\"\n        //     const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n        //     axios.get('https://api.weather.com/v1/geocode/' + position.coords.latitude + '/' + position.coords.longitude + '/forecast/intraday/3day.json?units=m&language=' + languageList + '&apiKey=' + APIkey)\n        //         .then(response => {\n        //             console.log(response.data.forecasts)\n        //             this.setState({ IBMweatherdata: response })\n        //         })\n\n\n        // });\n\n\n    }\n\n    render() {\n        return (\n            <div>\n                this page are for hourly weather\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}