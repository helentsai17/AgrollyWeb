{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/riskManagement/requireSearch.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nexport default class requireSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.OnChnageCity = this.OnChnageCity.bind(this);\n    this.OnChnageMonth = this.OnChnageMonth.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      city: '',\n      month: '',\n      allcity: [],\n      po_place: '',\n      CityCode: '',\n      weatherdata: []\n    };\n  }\n\n  componentDidMount() {\n    axios.get('http://agrolly.tech/get_cities.php').then(response => {\n      const getcities = response.data;\n      this.setState({\n        allcity: getcities\n      });\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    });\n  }\n\n  getCityCode() {\n    this.state.allcity.map(currentcity => {\n      if (currentcity.City == this.state.city) {\n        const currentcitypo = currentcity.po_place; // console.log(currentcitypo)\n\n        const CityCode = currentcity.Code;\n\n        if (currentcity.po_place != this.state.po_place) {\n          this.setState({\n            po_place: currentcitypo\n          });\n          this.setState({\n            CityCode: CityCode\n          });\n        }\n      }\n    }); // this.getLong();\n  }\n\n  OnChnageMonth(e) {\n    this.setState({\n      month: e.target.value\n    });\n  }\n\n  OnChnageCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  componentDidUpdate() {\n    {\n      this.getCityCode();\n    }\n  }\n\n  countAvarageTemp() {\n    axios.get('http://agrolly.tech/annualForecast.php?country=Brazil').then(responsedata => {\n      // console.log(responsedata)\n      const weatherdata = responsedata.data;\n      this.setState({\n        weatherdata: weatherdata\n      });\n    });\n    let month1 = 0,\n        count1 = 0,\n        getava1 = 0;\n    let month2 = 0,\n        count2 = 0,\n        getava2 = 0;\n    let month3 = 0,\n        count3 = 0,\n        getava3 = 0;\n    let month4 = 0,\n        count4 = 0,\n        getava4 = 0;\n    let month5 = 0,\n        count5 = 0,\n        getava5 = 0;\n    let month6 = 0,\n        count6 = 0,\n        getava6 = 0;\n    let month7 = 0,\n        count7 = 0,\n        getava7 = 0;\n    let month8 = 0,\n        count8 = 0,\n        getava8 = 0;\n    let month9 = 0,\n        count9 = 0,\n        getava9 = 0;\n    let month10 = 0,\n        count10 = 0,\n        getava10 = 0;\n    let month11 = 0,\n        count11 = 0,\n        getava11 = 0;\n    let month12 = 0,\n        count12 = 0,\n        getava12 = 0;\n    const monthlyava = this.state.weatherdata.map(data => {\n      const date = data[\"Date.fcst\"]; // console.log(date)\n\n      const AVAtemperature = \"TEMPMEDIA_fcast_\" + this.state.CityCode; // console.log(data[AVAtemperature])\n\n      if (date.substring(5, 7).includes(\"01\")) {\n        month1 = data[AVAtemperature] + month1;\n        count1++;\n        getava1 = month1 / count1;\n      } else if (date.substring(5, 7).includes(\"02\")) {\n        month2 = data[AVAtemperature] + month2;\n        count2++;\n        getava2 = month2 / count2;\n      } else if (date.substring(5, 7).includes(\"03\")) {\n        month3 = data[AVAtemperature] + month3;\n        count3++;\n        getava3 = month3 / count3;\n      } else if (date.substring(5, 7).includes(\"04\")) {\n        month4 = data[AVAtemperature] + month4;\n        count4++;\n        getava4 = month4 / count4;\n      } else if (date.substring(5, 7).includes(\"05\")) {\n        month5 = data[AVAtemperature] + month5;\n        count5++;\n        getava5 = month5 / count5;\n      } else if (date.substring(5, 7).includes(\"06\")) {\n        month6 = data[AVAtemperature] + month6;\n        count6++;\n        getava6 = month6 / count6;\n      } else if (date.substring(5, 7).includes(\"07\")) {\n        month7 = data[AVAtemperature] + month7;\n        count7++;\n        getava7 = month7 / count7;\n      } else if (date.substring(5, 7).includes(\"08\")) {\n        month8 = data[AVAtemperature] + month8;\n        count8++;\n        getava8 = month8 / count8;\n      } else if (date.substring(5, 7).includes(\"09\")) {\n        month9 = data[AVAtemperature] + month9;\n        count9++;\n        getava9 = month9 / count9;\n      } else if (date.substring(5, 7).includes(\"10\")) {\n        month10 = data[AVAtemperature] + month10;\n        count10++;\n        getava10 = month10 / count10;\n      } else if (date.substring(5, 7).includes(\"11\")) {\n        month11 = data[AVAtemperature] + month11;\n        count11++;\n        getava11 = month11 / count11;\n      } else if (date.substring(5, 7).includes(\"12\")) {\n        month12 = data[AVAtemperature] + month12;\n        count12++;\n        getava12 = month12 / count12;\n      }\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault(); // this.getCityCode();\n\n    const datainfo = {\n      po_place: this.state.po_place,\n      month: this.state.month,\n      CityCode: this.state.CityCode\n    };\n    this.props.history.push({\n      pathname: '/croprisk/display',\n      state: {\n        detail: datainfo\n      }\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        \"margin\": \"2% 30%\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputTime\",\n      value: this.state.month,\n      onChange: this.OnChnageMonth,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 29\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"1\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, \"January\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 29\n      }\n    }, \"February\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 29\n      }\n    }, \"March\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"4\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 29\n      }\n    }, \"April\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"May\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, \"June\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 29\n      }\n    }, \"July\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"8\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 29\n      }\n    }, \"Auguest\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, \"September\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"10\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 29\n      }\n    }, \"October\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"11\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 29\n      }\n    }, \"November\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 29\n      }\n    }, \"December\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputCity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 29\n      }\n    }, \"City\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputCity\",\n      value: this.state.city,\n      onChange: this.OnChnageCity,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 29\n      }\n    }, \"Choose...\"), this.state.allcity.map(allcity => {\n      return /*#__PURE__*/React.createElement(\"option\", {\n        value: allcity.City,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 75\n        }\n      }, allcity.City);\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"search\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 25\n      }\n    }))));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/riskManagement/requireSearch.js"],"names":["React","Component","axios","requireSearch","constructor","props","OnChnageCity","bind","OnChnageMonth","onSubmit","state","city","month","allcity","po_place","CityCode","weatherdata","componentDidMount","get","then","response","getcities","data","setState","catch","error","console","log","getCityCode","map","currentcity","City","currentcitypo","Code","e","target","value","componentDidUpdate","countAvarageTemp","responsedata","month1","count1","getava1","month2","count2","getava2","month3","count3","getava3","month4","count4","getava4","month5","count5","getava5","month6","count6","getava6","month7","count7","getava7","month8","count8","getava8","month9","count9","getava9","month10","count10","getava10","month11","count11","getava11","month12","count12","getava12","monthlyava","date","AVAtemperature","substring","includes","preventDefault","datainfo","history","push","pathname","detail","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\n\nexport default class requireSearch extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.OnChnageCity = this.OnChnageCity.bind(this)\n        this.OnChnageMonth = this.OnChnageMonth.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            city: '',\n            month: '',\n            allcity:[],\n            po_place:'',\n            CityCode:'',\n            weatherdata:[]\n        }\n\n    }\n\n    componentDidMount() {\n        \n        axios.get('http://agrolly.tech/get_cities.php')\n            .then(response => {\n                const getcities = response.data\n                this.setState({ allcity: getcities })\n                \n\n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n    }\n\n    getCityCode() {\n        this.state.allcity.map((currentcity) => {\n            if (currentcity.City == this.state.city) {\n                const currentcitypo = currentcity.po_place\n                // console.log(currentcitypo)\n                const CityCode = currentcity.Code\n                if(currentcity.po_place != this.state.po_place){\n                    this.setState({ po_place: currentcitypo })\n                    this.setState({ CityCode : CityCode})\n                }\n                \n            }\n        })\n        // this.getLong();\n    }\n\n    OnChnageMonth(e) {\n        this.setState({\n            month: e.target.value\n        })\n\n    }\n\n    OnChnageCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n       \n    }\n\n\n    componentDidUpdate() {\n        { this.getCityCode() }\n    }\n\n    countAvarageTemp(){\n        axios.get('http://agrolly.tech/annualForecast.php?country=Brazil')\n        .then(responsedata => {\n            // console.log(responsedata)\n            const weatherdata = responsedata.data\n            this.setState({ weatherdata: weatherdata })\n        })\n\n            let month1 =0, count1 = 0, getava1 = 0\n            let month2 =0, count2 = 0, getava2 = 0\n            let month3 =0, count3 = 0, getava3 = 0\n            let month4 =0, count4 = 0, getava4 = 0\n            let month5 =0, count5 = 0, getava5 = 0\n            let month6 =0, count6 = 0, getava6 = 0\n            let month7 =0, count7 = 0, getava7 = 0\n            let month8 =0, count8 = 0, getava8 = 0\n            let month9 =0, count9 = 0, getava9 = 0\n            let month10 =0, count10 = 0, getava10 = 0\n            let month11 =0, count11 = 0, getava11 = 0\n            let month12 =0, count12 = 0, getava12 = 0\n\n            const monthlyava =  this.state.weatherdata.map(data => {\n                const date = data[\"Date.fcst\"]\n                // console.log(date)\n                const AVAtemperature = \"TEMPMEDIA_fcast_\" + this.state.CityCode\n                // console.log(data[AVAtemperature])\n                if(date.substring(5, 7).includes(\"01\")){\n                    month1 = data[AVAtemperature] + month1\n                    count1++\n                    getava1 = month1/count1;\n                }else if(date.substring(5, 7).includes(\"02\")){\n                    month2 = data[AVAtemperature] + month2\n                    count2++\n                    getava2 = month2/count2;\n                }else if(date.substring(5, 7).includes(\"03\")){\n                    month3 = data[AVAtemperature] + month3\n                    count3++\n                    getava3 = month3/count3;\n                }else if(date.substring(5, 7).includes(\"04\")){\n                    month4 = data[AVAtemperature] + month4\n                    count4++\n                    getava4 = month4/count4;\n                }else if(date.substring(5, 7).includes(\"05\")){\n                    month5 = data[AVAtemperature] + month5\n                    count5++\n                    getava5 = month5/count5;\n                }else if(date.substring(5, 7).includes(\"06\")){\n                    month6 = data[AVAtemperature] + month6\n                    count6++\n                    getava6 = month6/count6;\n                }else if(date.substring(5, 7).includes(\"07\")){\n                    month7 = data[AVAtemperature] + month7\n                    count7++\n                    getava7 = month7/count7;\n                }else if(date.substring(5, 7).includes(\"08\")){\n                    month8 = data[AVAtemperature] + month8\n                    count8++\n                    getava8 = month8/count8;\n                }else if(date.substring(5, 7).includes(\"09\")){\n                    month9 = data[AVAtemperature] + month9\n                    count9++\n                    getava9 = month9/count9;\n                }else if(date.substring(5, 7).includes(\"10\")){\n                    month10 = data[AVAtemperature] + month10\n                    count10++\n                    getava10 = month10/count10;\n                }else if(date.substring(5, 7).includes(\"11\")){\n                    month11 = data[AVAtemperature] + month11\n                    count11++\n                    getava11 = month11/count11;\n                }else if(date.substring(5, 7).includes(\"12\")){\n                    month12 = data[AVAtemperature] + month12\n                    count12++\n                    getava12 = month12/count12;\n                }\n            })\n    }\n    \n\n    onSubmit(e) {  \n        e.preventDefault();\n        // this.getCityCode();\n        const datainfo = {\n            po_place: this.state.po_place,\n            month: this.state.month,\n            CityCode: this.state.CityCode\n        }\n        \n        this.props.history.push({\n            pathname: '/croprisk/display',\n            state: { detail: datainfo }\n          })\n    }\n\n\n    render() {\n        return (\n            <div style={{\"margin\":\"2% 30%\"}}>\n            <form onSubmit={this.onSubmit} >\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputTime\">Month</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputTime\" value={this.state.month} onChange={this.OnChnageMonth}>\n                            <option selected>Choose...</option>\n                            <option value=\"1\">January</option>\n                            <option value=\"2\">February</option>\n                            <option value=\"3\">March</option>\n                            <option value=\"4\">April</option>\n                            <option value=\"5\">May</option>\n                            <option value=\"6\">June</option>\n                            <option value=\"7\">July</option>\n                            <option value=\"8\">Auguest</option>\n                            <option value=\"9\">September</option>\n                            <option value=\"10\">October</option>\n                            <option value=\"11\">November</option>\n                            <option value=\"12\">December</option>\n                        </select>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputCity\">City</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputCity\" value={this.state.city} onChange={this.OnChnageCity}>\n                            <option selected>Choose...</option>\n                            {this.state.allcity.map((allcity) => { return <option value={allcity.City}>{allcity.City}</option> })}\n                        </select>\n                    </div>\n                    \n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"search\"\n                            className=\"btn btn-primary\" />\n                    </div>\n                </form>\n                \n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}