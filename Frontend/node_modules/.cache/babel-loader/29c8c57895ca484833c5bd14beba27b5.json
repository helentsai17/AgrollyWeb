{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/riskManagement/riskpage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport VegetablesCard from './vegetableCard';\nexport default class riskpage extends Component {\n  constructor(props) {\n    super(props);\n    this.OnChnageCity = this.OnChnageCity.bind(this);\n    this.OnChnageMonth = this.OnChnageMonth.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      city: '',\n      month: '',\n      vegetables: [],\n      allcity: [],\n      po_place: '',\n      allcityLong: [],\n      citydata: []\n    };\n  }\n\n  componentDidMount() {\n    //get city\n    var token = localStorage.getItem('usertoken');\n    var localdata = JSON.parse(token);\n    this.setState({\n      city: localdata.city\n    }); // to get all the city for the option \n\n    axios.get('http://agrolly.tech/get_cities.php').then(response => {\n      const getcities = response.data;\n      this.setState({\n        allcity: getcities\n      });\n      this.getCityCode();\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    }); //get crop detail\n\n    axios.get('http://www.agrolly.tech/cropdata.php').then(res => {\n      // console.log(res.data)\n      const vegetables = res.data;\n      this.setState({\n        vegetables: vegetables\n      });\n    }).catch(error => {\n      console.log('error come from get crop api: ' + error);\n    });\n  } //get the city code like S_25\n\n\n  getCityCode() {\n    this.state.allcity.map(currentcity => {\n      if (currentcity.City == this.state.city) {\n        const currentcitypo = currentcity.po_place; // const cityname = currentcity.City\n        // console.log(currentcitypo)\n\n        this.setState({\n          po_place: currentcitypo\n        });\n      }\n    }); // this.getLong();\n  } // getLong() {\n  //     axios.get('http://www.agrolly.tech/po_value.php')\n  //         .then(res => {\n  //             // console.log(res.data)\n  //             const po = res.data\n  //             this.setState({ allcityLong: po })\n  //             this.findcityLong()\n  //         }).catch(error => {\n  //             console.log(error)\n  //         })\n  // }\n  // findcityLong() {\n  //     const long = this.state.po_place.slice(2)\n  //     return this.state.allcityLong.filter(citylong => {\n  //         if (citylong.city_long === long) {\n  //             // console.log(citylong)\n  //             this.setState({ citydata: citylong })\n  //         }\n  //     })\n  // }\n\n\n  vegetablesList() {\n    return this.state.vegetables.map((vege, index) => {\n      return /*#__PURE__*/React.createElement(VegetablesCard, {\n        key: index,\n        vege: vege,\n        cityCode: this.state.po_place,\n        selectMount: this.state.month,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  OnChnageMonth(e) {\n    this.setState({\n      month: e.target.value\n    });\n  }\n\n  OnChnageCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    e.preventDefault();\n    console.log(this.state.month);\n    console.log(this.state.city);\n    this.getCityCode();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 13\n      }\n    }, this.vegetablesList());\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/riskManagement/riskpage.js"],"names":["React","Component","axios","VegetablesCard","riskpage","constructor","props","OnChnageCity","bind","OnChnageMonth","onSubmit","state","city","month","vegetables","allcity","po_place","allcityLong","citydata","componentDidMount","token","localStorage","getItem","localdata","JSON","parse","setState","get","then","response","getcities","data","getCityCode","catch","error","console","log","res","map","currentcity","City","currentcitypo","vegetablesList","vege","index","e","target","value","preventDefault","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport VegetablesCard from './vegetableCard'\n\n\n\n\nexport default class riskpage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.OnChnageCity = this.OnChnageCity.bind(this)\n        this.OnChnageMonth = this.OnChnageMonth.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {\n            city: '',\n            month: '',\n            vegetables: [],\n            allcity: [],\n            po_place: '',\n            allcityLong: [],\n            citydata: []\n        }\n\n    }\n\n    componentDidMount() {\n        //get city\n        var token = localStorage.getItem('usertoken');\n        var localdata = JSON.parse(token)\n        this.setState({ city: localdata.city })\n\n        // to get all the city for the option \n        axios.get('http://agrolly.tech/get_cities.php')\n            .then(response => {\n                const getcities = response.data\n                this.setState({ allcity: getcities })\n                this.getCityCode();\n\n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n\n        //get crop detail\n        axios.get('http://www.agrolly.tech/cropdata.php')\n            .then(res => {\n                // console.log(res.data)\n                const vegetables = res.data\n                this.setState({ vegetables: vegetables })\n            })\n            .catch(error => {\n                console.log('error come from get crop api: ' + error)\n            })\n    }\n    //get the city code like S_25\n    getCityCode() {\n        this.state.allcity.map((currentcity) => {\n            if (currentcity.City == this.state.city) {\n                const currentcitypo = currentcity.po_place\n                // const cityname = currentcity.City\n                // console.log(currentcitypo)\n                this.setState({ po_place: currentcitypo })\n            }\n        })\n        // this.getLong();\n    }\n\n    // getLong() {\n    //     axios.get('http://www.agrolly.tech/po_value.php')\n    //         .then(res => {\n    //             // console.log(res.data)\n    //             const po = res.data\n    //             this.setState({ allcityLong: po })\n    //             this.findcityLong()\n    //         }).catch(error => {\n    //             console.log(error)\n    //         })\n    // }\n\n    // findcityLong() {\n    //     const long = this.state.po_place.slice(2)\n    //     return this.state.allcityLong.filter(citylong => {\n    //         if (citylong.city_long === long) {\n    //             // console.log(citylong)\n    //             this.setState({ citydata: citylong })\n    //         }\n    //     })\n    // }\n\n    vegetablesList() {\n        return this.state.vegetables.map((vege,index) => {\n            return <VegetablesCard\n                key={index}\n                vege={vege}\n                cityCode={this.state.po_place} \n                selectMount={this.state.month} />\n        })\n    }\n\n\n    OnChnageMonth(e) {\n        this.setState({\n            month: e.target.value\n        })\n    }\n\n    OnChnageCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n        e.preventDefault();\n        console.log(this.state.month)\n        console.log(this.state.city)\n        this.getCityCode();\n\n    }\n    render() {\n        return (\n            <div>\n                {this.vegetablesList()}\n\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}