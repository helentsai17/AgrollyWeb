{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/weatherPage/hourlyweather.js\";\nimport axios from 'axios';\nimport React, { Component } from 'react';\nexport default class hourlyweather extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latitude: 0,\n      longitude: 0,\n      IBMweatherdata: []\n    };\n  }\n\n  componentDidMount() {\n    const onEvent = event => {\n      this.setState({\n        latitude: event.coords.latitude,\n        longitude: event.coords.longitude\n      });\n    };\n\n    navigator.geolocation.getCurrentPosition(onEvent);\n    console.log(this.state.latitude); // const postion = navigator.geolocation.getCurrentPosition(function (position) {\n    //     const lat = position.coords.latitude\n    //     const long = position.coords.longitude\n    //     console.log(lat)\n    //     return lat\n    // const languageList = \"en-US\"\n    // const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n    // axios.get('https://api.weather.com/v1/geocode/' + position.coords.latitude + '/' + position.coords.longitude + '/forecast/intraday/3day.json?units=m&language=' + languageList + '&apiKey=' + APIkey)\n    //     .then(response => {\n    //         console.log(response.data.forecasts)\n    //     })\n    // });\n    // console.log(postion)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, \"this page are for hourly weather\");\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/weatherPage/hourlyweather.js"],"names":["axios","React","Component","hourlyweather","constructor","props","state","latitude","longitude","IBMweatherdata","componentDidMount","onEvent","event","setState","coords","navigator","geolocation","getCurrentPosition","console","log","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAIA,eAAe,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAEjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE,CADD;AAETC,MAAAA,SAAS,EAAE,CAFF;AAGTC,MAAAA,cAAc,EAAE;AAHP,KAAb;AAKH;;AAEDC,EAAAA,iBAAiB,GAAG;AAEhB,UAAMC,OAAO,GAAGC,KAAK,IAAI;AACnB,WAAKC,QAAL,CAAc;AACZN,QAAAA,QAAQ,EAAEK,KAAK,CAACE,MAAN,CAAaP,QADX;AAEZC,QAAAA,SAAS,EAAEI,KAAK,CAACE,MAAN,CAAaN;AAFZ,OAAd;AAIL,KALD;;AAMAO,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCN,OAAzC;AAEAO,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAvB,EAVgB,CAYhB;AACA;AACA;AAEA;AACA;AAEI;AACA;AACA;AACA;AACA;AACA;AAGJ;AAEA;AACH;;AAKDa,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ;AAKH;;AApDgD","sourcesContent":["import axios from 'axios';\nimport React, { Component } from 'react';\n\n\n\nexport default class hourlyweather extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            latitude: 0,\n            longitude: 0,\n            IBMweatherdata: []\n        };\n    }\n\n    componentDidMount() {\n\n        const onEvent = event => {\n              this.setState({\n                latitude: event.coords.latitude,\n                longitude: event.coords.longitude,\n              });\n        };\n        navigator.geolocation.getCurrentPosition(onEvent);\n        \n        console.log(this.state.latitude)\n\n        // const postion = navigator.geolocation.getCurrentPosition(function (position) {\n        //     const lat = position.coords.latitude\n        //     const long = position.coords.longitude\n\n        //     console.log(lat)\n        //     return lat\n\n            // const languageList = \"en-US\"\n            // const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n            // axios.get('https://api.weather.com/v1/geocode/' + position.coords.latitude + '/' + position.coords.longitude + '/forecast/intraday/3day.json?units=m&language=' + languageList + '&apiKey=' + APIkey)\n            //     .then(response => {\n            //         console.log(response.data.forecasts)\n            //     })\n\n\n        // });\n\n        // console.log(postion)\n    }\n\n    \n\n\n    render() {\n        return (\n            <div>\n                this page are for hourly weather\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}