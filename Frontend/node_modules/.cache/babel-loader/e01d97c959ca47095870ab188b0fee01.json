{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/weatherPage/weeklyweather.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport WeeklyCard from './weeklyCard';\nexport default class weeklyweather extends Component {\n  constructor(props) {\n    super(props); // App State\n\n    this.state = {\n      lat: 0,\n      lng: 0,\n      DayOFWeek: [],\n      temperatureMax: [],\n      temperatureMin: [],\n      iconCode: [],\n      narrative: [],\n      sunsetTimeLocal: [],\n      daynarrative: []\n    };\n  }\n\n  componentDidMount() {\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      this.setState({\n        lat: latitude.toFixed(4),\n        lng: longitude.toFixed(4)\n      });\n    };\n\n    const error = () => {\n      console.log(\"Unable to retrieve your location\");\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n    const languageList = \"en-US\";\n    const APIkey = \"da328055e2e940d8b28055e2e9e0d851\";\n    axios.get('https://api.weather.com/v3/wx/forecast/daily/5day?geocode=' + this.state.lat + ',' + this.state.lng + '&format=json&units=m&language=' + languageList + '&apiKey=' + APIkey).then(response => {\n      console.log(response.data.daypart[0].narrative);\n      this.setState({\n        DayOFWeek: response.data.dayOfWeek,\n        temperatureMax: response.data.temperatureMax,\n        temperatureMin: response.data.temperatureMin,\n        iconCode: response.data.daypart[0].iconCode,\n        narrative: response.data.daypart[0].narrative,\n        sunsetTimeLocal: response.data.sunsetTimeLocal,\n        daynarrative: response.data.daypart[0].narrative\n      });\n    });\n  }\n\n  weeklyweatherList() {\n    const alldata = this.state.IBMdata.dayOfWeek; // this.setState({ DayOFWeek: alldata})\n\n    console.log(alldata); // console.log(alldata.temperatureMax)\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }\n    }, \"this page are for weekly weather\", /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(WeeklyCard, {\n      DayOFWeek: this.state.DayOFWeek[1],\n      temperatureMax: this.state.temperatureMax[1],\n      temperatureMin: this.state.temperatureMin[1],\n      iconCode: this.state.iconCode[1],\n      narrative: this.state.narrative[1],\n      sunsetTimeLocal: this.state.sunsetTimeLocal[1],\n      daynarrative: this.state.daynarrative[1],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeeklyCard, {\n      DayOFWeek: this.state.DayOFWeek[2],\n      temperatureMax: this.state.temperatureMax[2],\n      temperatureMin: this.state.temperatureMin[2],\n      iconCode: this.state.iconCode[2],\n      narrative: this.state.narrative[2],\n      sunsetTimeLocal: this.state.sunsetTimeLocal[2],\n      daynarrative: this.state.daynarrative[2],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeeklyCard, {\n      DayOFWeek: this.state.DayOFWeek[3],\n      temperatureMax: this.state.temperatureMax[3],\n      temperatureMin: this.state.temperatureMin[3],\n      iconCode: this.state.iconCode[3],\n      narrative: this.state.narrative[3],\n      sunsetTimeLocal: this.state.sunsetTimeLocal[3],\n      daynarrative: this.state.daynarrative[3],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeeklyCard, {\n      DayOFWeek: this.state.DayOFWeek[4],\n      temperatureMax: this.state.temperatureMax[4],\n      temperatureMin: this.state.temperatureMin[4],\n      iconCode: this.state.iconCode[4],\n      narrative: this.state.narrative[4],\n      sunsetTimeLocal: this.state.sunsetTimeLocal[4],\n      daynarrative: this.state.daynarrative[4],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(WeeklyCard, {\n      DayOFWeek: this.state.DayOFWeek[5],\n      temperatureMax: this.state.temperatureMax[5],\n      temperatureMin: this.state.temperatureMin[5],\n      iconCode: this.state.iconCode[5],\n      narrative: this.state.narrative[5],\n      sunsetTimeLocal: this.state.sunsetTimeLocal[5],\n      daynarrative: this.state.daynarrative[5],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/weatherPage/weeklyweather.js"],"names":["React","Component","axios","WeeklyCard","weeklyweather","constructor","props","state","lat","lng","DayOFWeek","temperatureMax","temperatureMin","iconCode","narrative","sunsetTimeLocal","daynarrative","componentDidMount","success","position","latitude","coords","longitude","setState","toFixed","error","console","log","navigator","geolocation","getCurrentPosition","languageList","APIkey","get","then","response","data","daypart","dayOfWeek","weeklyweatherList","alldata","IBMdata","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios';\nimport WeeklyCard from './weeklyCard'\n\n\nexport default class weeklyweather extends Component {\n\n  constructor(props) {\n    super(props);\n\n    // App State\n    this.state = {\n      lat: 0,\n      lng: 0,\n\n\n      DayOFWeek:[],\n      temperatureMax:[],\n      temperatureMin:[],\n      iconCode:[],\n      narrative:[],\n      sunsetTimeLocal:[],\n      daynarrative:[]\n\n    }\n  };\n\n  componentDidMount() {\n\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n\n      this.setState({\n        lat: latitude.toFixed(4),\n        lng: longitude.toFixed(4)\n      });\n    };\n    const error = () => {\n      console.log(\"Unable to retrieve your location\");\n    };\n    navigator.geolocation.getCurrentPosition(success, error);\n\n\n    const languageList = \"en-US\"\n    const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n    axios.get('https://api.weather.com/v3/wx/forecast/daily/5day?geocode=' + this.state.lat + ',' + this.state.lng + '&format=json&units=m&language=' + languageList + '&apiKey=' + APIkey)\n      .then(response => {\n        console.log(response.data.daypart[0].narrative)\n        this.setState({ DayOFWeek: response.data.dayOfWeek , \n          temperatureMax:response.data.temperatureMax, \n          temperatureMin:response.data.temperatureMin,\n          iconCode:response.data.daypart[0].iconCode,\n          narrative:response.data.daypart[0].narrative,\n          sunsetTimeLocal:response.data.sunsetTimeLocal,\n          daynarrative:response.data.daypart[0].narrative\n          })\n      })\n  }\n\n  weeklyweatherList(){\n    const alldata = this.state.IBMdata.dayOfWeek \n    // this.setState({ DayOFWeek: alldata})\n    console.log(alldata)\n    // console.log(alldata.temperatureMax)\n    \n  }\n\n\n\n  render() {\n    return (\n      <div>\n        this page are for weekly weather\n        <div className = \"row\">\n        \n        <WeeklyCard DayOFWeek={this.state.DayOFWeek[1]} temperatureMax={this.state.temperatureMax[1]} temperatureMin={this.state.temperatureMin[1]} iconCode={this.state.iconCode[1]} narrative={this.state.narrative[1]} sunsetTimeLocal={this.state.sunsetTimeLocal[1]} daynarrative={this.state.daynarrative[1]}/>\n        <WeeklyCard DayOFWeek={this.state.DayOFWeek[2]} temperatureMax={this.state.temperatureMax[2]} temperatureMin={this.state.temperatureMin[2]} iconCode={this.state.iconCode[2]} narrative={this.state.narrative[2]} sunsetTimeLocal={this.state.sunsetTimeLocal[2]} daynarrative={this.state.daynarrative[2]}/>\n        <WeeklyCard DayOFWeek={this.state.DayOFWeek[3]} temperatureMax={this.state.temperatureMax[3]} temperatureMin={this.state.temperatureMin[3]} iconCode={this.state.iconCode[3]} narrative={this.state.narrative[3]} sunsetTimeLocal={this.state.sunsetTimeLocal[3]} daynarrative={this.state.daynarrative[3]}/>\n        <WeeklyCard DayOFWeek={this.state.DayOFWeek[4]} temperatureMax={this.state.temperatureMax[4]} temperatureMin={this.state.temperatureMin[4]} iconCode={this.state.iconCode[4]} narrative={this.state.narrative[4]} sunsetTimeLocal={this.state.sunsetTimeLocal[4]} daynarrative={this.state.daynarrative[4]}/>\n        <WeeklyCard DayOFWeek={this.state.DayOFWeek[5]} temperatureMax={this.state.temperatureMax[5]} temperatureMin={this.state.temperatureMin[5]} iconCode={this.state.iconCode[5]} narrative={this.state.narrative[5]} sunsetTimeLocal={this.state.sunsetTimeLocal[5]} daynarrative={this.state.daynarrative[5]}/>\n       \n        </div>\n        {/* <div>{this.state.DayOFWeek[0]}</div>\n        <div>{this.state.lng}</div>\n        <div>{this.state.lat}</div>\n        <div>{this.state.DayOFWeek.map(day=>{return <div>{day}</div>})}</div>\n        <h1>{this.state.temperatureMax.map(temp =>{return <div>{temp}</div>})}</h1>\n        <h1>{this.state.temperatureMin.map(temp =>{return <div>{temp}</div>})}</h1> */}\n        \n        {/* {this.weeklyweatherList()} */}\n      </div>\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}