{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/weatherPage/weeklyweather.js\";\nimport React, { Component } from 'react';\nexport default class weeklyweather extends Component {\n  constructor(props) {\n    super(props); // App State\n\n    this.state = {\n      lat: 0,\n      lng: 0,\n      IBMdata: []\n    };\n  }\n\n  componentDidMount() {\n    // Get location of user\n    const success = position => {\n      const latitude = position.coords.latitude;\n      const longitude = position.coords.longitude;\n      console.log(latitude, longitude);\n      this.setState({\n        lat: latitude.toFixed(4),\n        lng: longitude.toFixed(4)\n      });\n    };\n\n    const error = () => {\n      console.log(\"Unable to retrieve your location\");\n    };\n\n    navigator.geolocation.getCurrentPosition(success, error);\n    const languageList = \"en-US\";\n    const APIkey = \"da328055e2e940d8b28055e2e9e0d851\";\n    axios.get('https://api.weather.com/v3/wx/forecast/daily/5day?geocode=' + this.state.lat + ',' + this.state.lng + '&format=json&units=m&language=' + languageList + '&apiKey=' + APIkey).then(response => {\n      console.log(response.data.forecasts);\n      this.setState({\n        IBMdata: response.data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }\n    }, \"this page are for weekly weather\");\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/weatherPage/weeklyweather.js"],"names":["React","Component","weeklyweather","constructor","props","state","lat","lng","IBMdata","componentDidMount","success","position","latitude","coords","longitude","console","log","setState","toFixed","error","navigator","geolocation","getCurrentPosition","languageList","APIkey","axios","get","then","response","data","forecasts","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,eAAe,MAAMC,aAAN,SAA4BD,SAA5B,CAAsC;AAEjDE,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAGf;;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,GAAG,EAAE,CADM;AAEXC,MAAAA,GAAG,EAAE,CAFM;AAGXC,MAAAA,OAAO,EAAC;AAHG,KAAb;AAKD;;AAEDC,EAAAA,iBAAiB,GAAG;AAClB;AACA,UAAMC,OAAO,GAAGC,QAAQ,IAAI;AAC1B,YAAMC,QAAQ,GAAGD,QAAQ,CAACE,MAAT,CAAgBD,QAAjC;AACA,YAAME,SAAS,GAAGH,QAAQ,CAACE,MAAT,CAAgBC,SAAlC;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EAAsBE,SAAtB;AACA,WAAKG,QAAL,CAAc;AACZX,QAAAA,GAAG,EAAEM,QAAQ,CAACM,OAAT,CAAiB,CAAjB,CADO;AAEZX,QAAAA,GAAG,EAAEO,SAAS,CAACI,OAAV,CAAkB,CAAlB;AAFO,OAAd;AAID,KARD;;AASA,UAAMC,KAAK,GAAG,MAAM;AAClBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ;AACD,KAFD;;AAGAI,IAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyCZ,OAAzC,EAAkDS,KAAlD;AAGA,UAAMI,YAAY,GAAG,OAArB;AACI,UAAMC,MAAM,GAAG,kCAAf;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,+DAA8D,KAAKrB,KAAL,CAAWC,GAAzE,GAA+E,GAA/E,GAAqF,KAAKD,KAAL,CAAWE,GAAhG,GAAsG,gCAAtG,GAAyIgB,YAAzI,GAAwJ,UAAxJ,GAAmKC,MAA7K,EACKG,IADL,CACUC,QAAQ,IAAI;AACdb,MAAAA,OAAO,CAACC,GAAR,CAAYY,QAAQ,CAACC,IAAT,CAAcC,SAA1B;AACA,WAAKb,QAAL,CAAc;AAACT,QAAAA,OAAO,EAACoB,QAAQ,CAACC;AAAlB,OAAd;AACH,KAJL;AAKL;;AAIHE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0CADJ;AAKH;;AA/CgD","sourcesContent":["import React, { Component } from 'react';\n\n\nexport default class weeklyweather extends Component {\n\n    constructor(props) {\n        super(props);\n      \n        // App State\n        this.state = {\n          lat: 0,\n          lng: 0,\n          IBMdata:[]\n        }\n      };\n      \n      componentDidMount() {\n        // Get location of user\n        const success = position => {\n          const latitude = position.coords.latitude;\n          const longitude = position.coords.longitude;\n          console.log(latitude, longitude);\n          this.setState({\n            lat: latitude.toFixed(4),\n            lng: longitude.toFixed(4)\n          });\n        };\n        const error = () => {\n          console.log(\"Unable to retrieve your location\");\n        };\n        navigator.geolocation.getCurrentPosition(success, error);\n        \n\n        const languageList = \"en-US\"\n            const APIkey = \"da328055e2e940d8b28055e2e9e0d851\"\n            axios.get('https://api.weather.com/v3/wx/forecast/daily/5day?geocode='+ this.state.lat + ',' + this.state.lng + '&format=json&units=m&language=' + languageList + '&apiKey='+APIkey)\n                .then(response => {\n                    console.log(response.data.forecasts)\n                    this.setState({IBMdata:response.data})\n                })\n      }\n\n\n    \n    render() {\n        return (\n            <div>\n                this page are for weekly weather\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}