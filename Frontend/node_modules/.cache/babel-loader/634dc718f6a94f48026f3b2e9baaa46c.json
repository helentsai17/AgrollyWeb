{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/weatherPage/annualpage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport style from './weatherpage.module.css';\nimport WeatherCard from './weathercardAnnual';\nexport default class Annualpage extends Component {\n  constructor(props) {\n    super(props);\n    var token = localStorage.getItem('usertoken');\n    var localdata = JSON.parse(token);\n    this.onChangeCountry = this.onChangeCountry.bind(this);\n    this.OnChangeState = this.OnChangeState.bind(this);\n    this.OnChnageCity = this.OnChnageCity.bind(this);\n    this.OnSubmit = this.OnSubmit.bind(this);\n    this.state = {\n      Country: '',\n      State: localdata.state,\n      city: localdata.city,\n      getcitiescode: [],\n      currentcitycode: '',\n      weatherdata: []\n    }; // console.log(this.state.city)\n  }\n\n  componentDidMount() {\n    axios.get('http://agrolly.tech/get_cities.php').then(response => {\n      const getcities = response.data; // console.log(getcities)\n\n      this.setState({\n        getcitiescode: getcities\n      });\n      this.getCityCode();\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    });\n    axios.get('http://agrolly.tech/annualForecast.php?country=Brazil').then(response => {\n      // console.log(response.data)\n      const weatherdata = response.data;\n      this.setState({\n        weatherdata: weatherdata\n      });\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    });\n  }\n\n  getCityCode() {\n    this.state.getcitiescode.map(currentcity => {\n      if (currentcity.City == this.state.city) {\n        const currentcitycode = currentcity.Code;\n        console.log(currentcitycode);\n        this.setState({\n          currentcitycode: currentcitycode\n        });\n      }\n    });\n  }\n\n  WeatherList() {\n    // const citycode = this.state.currentcitycode\n    // const MAXtemperature = \"TEMPMAX_fcast_\" + citycode\n    // const MINtemperature = \"TEMPMIN_fcast_\" + citycode\n    // const AVAtemperature = \"TEMPMEDIA_fcast_\" + citycode\n    // const rainfall = \"fcast_class_\" + citycode\n    // const rainorno = \"rained_\" + citycode + \"_yN\"\n    // const icon = \"icon_\" + citycode\n    return this.state.weatherdata.map((data, index) => {\n      console.log(data);\n      return /*#__PURE__*/React.createElement(WeatherCard, {\n        key: index,\n        data: data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  onChangeCountry(e) {\n    this.setState({\n      Country: e.target.value\n    });\n  }\n\n  OnChangeState(e) {\n    this.setState({\n      state: e.target.value\n    });\n  }\n\n  OnChnageCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  OnSubmit(e) {}\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: style.formStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 33\n      }\n    }, \"Month\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputTime\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 33\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Brazil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 33\n      }\n    }, \"Brazil\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mongolia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 33\n      }\n    }, \"Mongolia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"USA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 33\n      }\n    }, \"United State\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Taiwan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 33\n      }\n    }, \"Taiwan\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputstate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 33\n      }\n    }, \"State\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputstate\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Brazil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Brazil\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mongolia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, \"Mongolia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"USA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 33\n      }\n    }, \"United State\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Taiwan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 33\n      }\n    }, \"Taiwan\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group mb-3\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-group-prepend\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"input-group-text\",\n      htmlFor: \"inputCity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 33\n      }\n    }, \"City\")), /*#__PURE__*/React.createElement(\"select\", {\n      className: \"custom-select\",\n      id: \"inputCity\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 33\n      }\n    }, \"Choose...\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Brazil\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 33\n      }\n    }, \"Brazil\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Mongolia\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 33\n      }\n    }, \"Mongolia\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"USA\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }\n    }, \"United State\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Taiwan\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 33\n      }\n    }, \"Taiwan\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"submit\",\n      value: \"search\",\n      className: \"btn btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 29\n      }\n    })))), /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 17\n      }\n    }, this.state.city), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 17\n      }\n    }, this.WeatherList()));\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/weatherPage/annualpage.js"],"names":["React","Component","axios","style","WeatherCard","Annualpage","constructor","props","token","localStorage","getItem","localdata","JSON","parse","onChangeCountry","bind","OnChangeState","OnChnageCity","OnSubmit","state","Country","State","city","getcitiescode","currentcitycode","weatherdata","componentDidMount","get","then","response","getcities","data","setState","getCityCode","catch","error","console","log","map","currentcity","City","Code","WeatherList","index","e","target","value","render","formStyle","onSubmit"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,0BAAlB;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAIA,eAAe,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAE9CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,QAAIC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAZ;AACA,QAAIC,SAAS,GAAGC,IAAI,CAACC,KAAL,CAAWL,KAAX,CAAhB;AAEA,SAAKM,eAAL,GAAuB,KAAKA,eAAL,CAAqBC,IAArB,CAA0B,IAA1B,CAAvB;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,YAAL,GAAoB,KAAKA,YAAL,CAAkBF,IAAlB,CAAuB,IAAvB,CAApB;AACA,SAAKG,QAAL,GAAgB,KAAKA,QAAL,CAAcH,IAAd,CAAmB,IAAnB,CAAhB;AAEA,SAAKI,KAAL,GAAa;AACTC,MAAAA,OAAO,EAAE,EADA;AAETC,MAAAA,KAAK,EAAEV,SAAS,CAACQ,KAFR;AAGTG,MAAAA,IAAI,EAAEX,SAAS,CAACW,IAHP;AAITC,MAAAA,aAAa,EAAE,EAJN;AAKTC,MAAAA,eAAe,EAAE,EALR;AAMTC,MAAAA,WAAW,EAAE;AANJ,KAAb,CAXe,CAoBf;AAEH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBxB,IAAAA,KAAK,CAACyB,GAAN,CAAU,oCAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd,YAAMC,SAAS,GAAGD,QAAQ,CAACE,IAA3B,CADc,CAEd;;AACA,WAAKC,QAAL,CAAc;AAAET,QAAAA,aAAa,EAAEO;AAAjB,OAAd;AACA,WAAKG,WAAL;AACH,KANL,EAMOC,KANP,CAMcC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,KAAxC;AACH,KARL;AASAjC,IAAAA,KAAK,CAACyB,GAAN,CAAU,uDAAV,EACKC,IADL,CACUC,QAAQ,IAAI;AACd;AACA,YAAMJ,WAAW,GAAGI,QAAQ,CAACE,IAA7B;AACA,WAAKC,QAAL,CAAc;AAAEP,QAAAA,WAAW,EAAEA;AAAf,OAAd;AAEH,KANL,EAMOS,KANP,CAMcC,KAAD,IAAW;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,KAAxC;AACH,KARL;AAUH;;AAEDF,EAAAA,WAAW,GAAG;AACV,SAAKd,KAAL,CAAWI,aAAX,CAAyBe,GAAzB,CAA8BC,WAAD,IAAiB;AAC1C,UAAIA,WAAW,CAACC,IAAZ,IAAoB,KAAKrB,KAAL,CAAWG,IAAnC,EAAyC;AACrC,cAAME,eAAe,GAAGe,WAAW,CAACE,IAApC;AACAL,QAAAA,OAAO,CAACC,GAAR,CAAYb,eAAZ;AACA,aAAKQ,QAAL,CAAc;AAAER,UAAAA,eAAe,EAAEA;AAAnB,SAAd;AACH;AACJ,KAND;AAOH;;AAEDkB,EAAAA,WAAW,GAAG;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,WAAO,KAAKvB,KAAL,CAAWM,WAAX,CAAuBa,GAAvB,CAA2B,CAACP,IAAD,EAAOY,KAAP,KAAiB;AAC/CP,MAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ;AACA,0BAAO,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAEY,KAAlB;AAAyB,QAAA,IAAI,EAAEZ,IAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AAEH,KAJM,CAAP;AAKH;;AAEDjB,EAAAA,eAAe,CAAC8B,CAAD,EAAI;AACf,SAAKZ,QAAL,CAAc;AACVZ,MAAAA,OAAO,EAAEwB,CAAC,CAACC,MAAF,CAASC;AADR,KAAd;AAGH;;AAED9B,EAAAA,aAAa,CAAC4B,CAAD,EAAI;AACb,SAAKZ,QAAL,CAAc;AACVb,MAAAA,KAAK,EAAEyB,CAAC,CAACC,MAAF,CAASC;AADN,KAAd;AAGH;;AAED7B,EAAAA,YAAY,CAAC2B,CAAD,EAAI;AACZ,SAAKZ,QAAL,CAAc;AACVV,MAAAA,IAAI,EAAEsB,CAAC,CAACC,MAAF,CAASC;AADL,KAAd;AAGH;;AAED5B,EAAAA,QAAQ,CAAC0B,CAAD,EAAI,CAEX;;AAEDG,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEI;AAAK,MAAA,SAAS,EAAE5C,KAAK,CAAC6C,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAM,MAAA,QAAQ,EAAE,KAAKC,QAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CAJJ,CADJ,eAcI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,YAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,CADJ,eAII;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CAJJ,CAdJ,eA2BI;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,kBAAjB;AAAoC,MAAA,OAAO,EAAC,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,CADJ,eAII;AAAQ,MAAA,SAAS,EAAC,eAAlB;AAAkC,MAAA,EAAE,EAAC,WAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAQ,MAAA,QAAQ,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADJ,eAEI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAQ,MAAA,KAAK,EAAC,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHJ,eAII;AAAQ,MAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJJ,eAKI;AAAQ,MAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBALJ,CAJJ,CA3BJ,eAwCI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC,QAA3B;AACI,MAAA,SAAS,EAAC,iBADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CAxCJ,CADJ,CAFJ,eAiDI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK,KAAK9B,KAAL,CAAWG,IAAhB,CAjDJ,eAkDI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKoB,WAAL,EADL,CAlDJ,CADJ;AAwDH;;AAzJ6C","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport style from './weatherpage.module.css'\nimport WeatherCard from './weathercardAnnual'\n\n\n\nexport default class Annualpage extends Component {\n\n    constructor(props) {\n        super(props);\n\n        var token = localStorage.getItem('usertoken');\n        var localdata = JSON.parse(token)\n\n        this.onChangeCountry = this.onChangeCountry.bind(this)\n        this.OnChangeState = this.OnChangeState.bind(this)\n        this.OnChnageCity = this.OnChnageCity.bind(this)\n        this.OnSubmit = this.OnSubmit.bind(this)\n\n        this.state = {\n            Country: '',\n            State: localdata.state,\n            city: localdata.city,\n            getcitiescode: [],\n            currentcitycode: '',\n            weatherdata: [],\n\n        }\n        // console.log(this.state.city)\n\n    }\n\n    componentDidMount() {\n        axios.get('http://agrolly.tech/get_cities.php')\n            .then(response => {\n                const getcities = response.data\n                // console.log(getcities)\n                this.setState({ getcitiescode: getcities })\n                this.getCityCode();\n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n        axios.get('http://agrolly.tech/annualForecast.php?country=Brazil')\n            .then(response => {\n                // console.log(response.data)\n                const weatherdata = response.data\n                this.setState({ weatherdata: weatherdata })\n\n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n\n    }\n\n    getCityCode() {\n        this.state.getcitiescode.map((currentcity) => {\n            if (currentcity.City == this.state.city) {\n                const currentcitycode = currentcity.Code\n                console.log(currentcitycode)\n                this.setState({ currentcitycode: currentcitycode })\n            }\n        })\n    }\n\n    WeatherList() {\n        // const citycode = this.state.currentcitycode\n        // const MAXtemperature = \"TEMPMAX_fcast_\" + citycode\n        // const MINtemperature = \"TEMPMIN_fcast_\" + citycode\n        // const AVAtemperature = \"TEMPMEDIA_fcast_\" + citycode\n        // const rainfall = \"fcast_class_\" + citycode\n        // const rainorno = \"rained_\" + citycode + \"_yN\"\n        // const icon = \"icon_\" + citycode\n\n        return this.state.weatherdata.map((data, index) => {\n            console.log(data)\n            return <WeatherCard key={index} data={data} />\n\n        })\n    }\n\n    onChangeCountry(e) {\n        this.setState({\n            Country: e.target.value\n        })\n    }\n\n    OnChangeState(e) {\n        this.setState({\n            state: e.target.value\n        })\n    }\n\n    OnChnageCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n    }\n\n    OnSubmit(e) {\n\n    }\n\n    render() {\n        return (\n            <div >\n\n                <div className={style.formStyle}>\n                    <form onSubmit={this.onSubmit} >\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <label className=\"input-group-text\" htmlFor=\"inputTime\">Month</label>\n                            </div>\n                            <select className=\"custom-select\" id=\"inputTime\">\n                                <option selected>Choose...</option>\n                                <option value=\"Brazil\">Brazil</option>\n                                <option value=\"Mongolia\">Mongolia</option>\n                                <option value=\"USA\">United State</option>\n                                <option value=\"Taiwan\">Taiwan</option>\n                            </select>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <label className=\"input-group-text\" htmlFor=\"inputstate\">State</label>\n                            </div>\n                            <select className=\"custom-select\" id=\"inputstate\">\n                                <option selected>Choose...</option>\n                                <option value=\"Brazil\">Brazil</option>\n                                <option value=\"Mongolia\">Mongolia</option>\n                                <option value=\"USA\">United State</option>\n                                <option value=\"Taiwan\">Taiwan</option>\n                            </select>\n                        </div>\n\n                        <div className=\"input-group mb-3\">\n                            <div className=\"input-group-prepend\">\n                                <label className=\"input-group-text\" htmlFor=\"inputCity\">City</label>\n                            </div>\n                            <select className=\"custom-select\" id=\"inputCity\">\n                                <option selected>Choose...</option>\n                                <option value=\"Brazil\">Brazil</option>\n                                <option value=\"Mongolia\">Mongolia</option>\n                                <option value=\"USA\">United State</option>\n                                <option value=\"Taiwan\">Taiwan</option>\n                            </select>\n                        </div>\n\n                        <div className=\"form-group\">\n                            <input type=\"submit\" value=\"search\"\n                                className=\"btn btn-primary\" />\n                        </div>\n                    </form>\n                </div>\n                <h5>{this.state.city}</h5>\n                <div className=\"row\">\n                    {this.WeatherList()}\n                </div>\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}