{"ast":null,"code":"var _jsxFileName = \"/Users/helentsai/agrolly-shop/src/components/riskManagement/riskpage.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport VegetablesCard from './vegetableCard';\nimport e from 'express';\nexport default class riskpage extends Component {\n  constructor(props) {\n    super(props);\n    var token = localStorage.getItem('usertoken');\n    var localdata = JSON.parse(token);\n    this.OnChnageCity = this.OnChnageCity.bind(this);\n    this.OnChnageMonth = this.OnChnageMonth.bind(this);\n    this.onSubmit = this.onSubmit.bind(this);\n    this.state = {\n      city: '',\n      month: '',\n      vegetables: [],\n      allcity: [],\n      po_place: '',\n      allcityLong: []\n    };\n  }\n\n  componentDidMount() {\n    //get city\n    var token = localStorage.getItem('usertoken');\n    var localdata = JSON.parse(token);\n    this.setState({\n      city: localdata.city\n    });\n    axios.get('http://agrolly.tech/get_cities.php').then(response => {\n      const getcities = response.data;\n      this.setState({\n        allcity: getcities\n      });\n      this.getCityCode();\n    }).catch(error => {\n      console.log(\"error from get cities: \" + error);\n    }); //get crop detail\n\n    axios.get('http://www.agrolly.tech/crop_list.php').then(res => {\n      // console.log(res.data)\n      const vegetables = res.data;\n      this.setState({\n        vegetables: vegetables\n      });\n    }).catch(error => {\n      console.log('error come from get crop api: ' + error);\n    });\n  }\n\n  getCityCode() {\n    this.state.allcity.map(currentcity => {\n      if (currentcity.City == this.state.city) {\n        const currentcitypo = currentcity.po_place;\n        console.log(currentcitypo);\n        this.setState({\n          po_place: currentcitypo\n        });\n      }\n    });\n    this.getLong();\n  }\n\n  getLong() {\n    const long = this.state.po_place.slice(2); // console.log(long)\n\n    axios.get('http://www.agrolly.tech/po_value.php').then(res => {\n      console.log(res.data);\n    }).catch(error => {\n      console.log('error come from get city Long: ' + error);\n    });\n  }\n\n  vegetablesList() {\n    return this.state.vegetables.map(vege => {\n      return /*#__PURE__*/React.createElement(VegetablesCard, {\n        key: vege.Order,\n        vege: vege,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 20\n        }\n      });\n    });\n  }\n\n  OnChnageMonth(e) {\n    this.setState({\n      month: e.target.value\n    });\n  }\n\n  OnChnageCity(e) {\n    this.setState({\n      city: e.target.value\n    });\n  }\n\n  onSubmit(e) {\n    console.log();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }\n    }, this.vegetablesList());\n  }\n\n}","map":{"version":3,"sources":["/Users/helentsai/agrolly-shop/src/components/riskManagement/riskpage.js"],"names":["React","Component","axios","VegetablesCard","e","riskpage","constructor","props","token","localStorage","getItem","localdata","JSON","parse","OnChnageCity","bind","OnChnageMonth","onSubmit","state","city","month","vegetables","allcity","po_place","allcityLong","componentDidMount","setState","get","then","response","getcities","data","getCityCode","catch","error","console","log","res","map","currentcity","City","currentcitypo","getLong","long","slice","vegetablesList","vege","Order","target","value","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from 'axios'\nimport VegetablesCard from './vegetableCard'\nimport e from 'express';\n\n\n\nexport default class riskpage extends Component {\n\n    constructor(props) {\n        super(props);\n        var token = localStorage.getItem('usertoken');\n        var localdata = JSON.parse(token)\n\n        this.OnChnageCity = this.OnChnageCity.bind(this)\n        this.OnChnageMonth = this.OnChnageMonth.bind(this)\n        this.onSubmit = this.onSubmit.bind(this)\n\n        this.state = {         \n            city:'',\n            month:'',\n            vegetables:[],\n            allcity:[],\n            po_place:'',\n            allcityLong:[],\n        }\n       \n    }\n\n    componentDidMount(){\n        //get city\n        var token = localStorage.getItem('usertoken');\n        var localdata = JSON.parse(token)\n        this.setState({city:localdata.city})\n\n        axios.get('http://agrolly.tech/get_cities.php')\n            .then(response => {\n                const getcities = response.data\n                this.setState({ allcity: getcities }) \n                this.getCityCode();\n                \n            }).catch((error) => {\n                console.log(\"error from get cities: \" + error)\n            })\n\n        //get crop detail\n        axios.get('http://www.agrolly.tech/crop_list.php')\n            .then(res =>{\n                // console.log(res.data)\n                const vegetables = res.data\n                this.setState({vegetables : vegetables})\n            })\n            .catch(error =>{\n                console.log('error come from get crop api: '+error)\n            })\n    }\n\n    getCityCode() {\n        this.state.allcity.map((currentcity) => {\n            if (currentcity.City == this.state.city) {\n                const currentcitypo = currentcity.po_place\n                console.log(currentcitypo)\n                this.setState({ po_place: currentcitypo })\n            }\n        })\n        this.getLong();\n    }\n\n    getLong(){\n        const long = this.state.po_place.slice(2)\n        // console.log(long)\n\n        axios.get('http://www.agrolly.tech/po_value.php')\n        .then(res =>{\n            console.log(res.data)\n\n        }).catch(error =>{\n            console.log('error come from get city Long: '+ error)\n        })\n    }\n\n    vegetablesList(){\n        return this.state.vegetables.map(vege =>{\n            return <VegetablesCard key={vege.Order} vege={vege} />\n        })\n    }\n\n\n    OnChnageMonth(e){\n        this.setState({\n            month:e.target.value\n        })\n    }\n\n    OnChnageCity(e) {\n        this.setState({\n            city: e.target.value\n        })\n    }\n\n    onSubmit(e) {\n\n        console.log()\n\n    }\n    render() {\n        return (\n            <div>\n                {/* <form onSubmit={this.onSubmit} >\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputTime\">Month</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputTime\" value={this.state.month} onChange={this.OnChnageMonth}>\n                            <option selected>Choose...</option>\n                            {this.state.MonthinYear.map((month) => { return <option value={month}>{month}</option> })}\n                        </select>\n                    </div>\n\n                    <div className=\"input-group mb-3\">\n                        <div className=\"input-group-prepend\">\n                            <label className=\"input-group-text\" htmlFor=\"inputCity\">City</label>\n                        </div>\n                        <select className=\"custom-select\" id=\"inputCity\" value={this.state.city} onChange={this.OnChnageCity}>\n                            <option selected>Choose...</option>\n                            {this.state.getcitiescode.map((allcity) => { return <option value={allcity.City}>{allcity.City}</option> })}\n                        </select>\n                    </div>\n\n                    <div className=\"form-group\">\n                        <input type=\"submit\" value=\"search\"\n                            className=\"btn btn-primary\" />\n                    </div>\n                </form> */}\n                {this.vegetablesList()}\n            </div>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}